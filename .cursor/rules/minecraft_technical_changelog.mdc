---
description: Minecraft's technical changelog. Useful for understanding how API's and systems changed between versions.
globs: 
alwaysApply: false
---
Always make sure to check the API's you're using agains minecraft's changelog:

<changelog>
Technical Changelog

25w09a1.21.5

Data pack format has been increased to 69. Nice!
25w09a1.21.5

/data command can now create and modify heterogeneous lists transparently, and can no longer traverse paths with an empty key (e.g. /data get ... foo.''.bar).
25w09a1.21.5

Any interface with NBT data within the game now supports heterogeneous lists, i.e. ones where elements are not of the same type.

    Inserting or replacing into a list of a different type with /data will no longer give an error.
    Inserting into an array type (e.g. [I;1,2,3]) is still type-restricted.
    The way how NBT data is saved remains unchanged, and heterogeneous lists are transformed before storage to bypass NBT constraints.

25w09a1.21.5

Numeric format in SNBT is now expanded.

    The integer part or fractional part of a float number can be ignored (e.g. .1 and 1. is supported now).
    Now supports scientific notation with E (e.g. 1.2e3, ​1.2E3, 1.2E+3 and 12000e-1 can be used to denote 1200 now).
    Hexadecimal and binary integer is now supported, denoted with a prefix of 0x and 0b respectively (e.g. 0xbad=2989, 0xCAFE=51966, 0b101=5).
    Underscore _ can be inserted between numbers, but it's not allowed to place underscore before or after numbers (e.g. 0b10_01, 0xAB_CD, 1_2.3_4__5f, 1_2e3_4 is now supported).
    NaN, Inf, and Hexadecimal float number is not supported.

25w09a1.21.5

Integers can not start with 0 now.
25w09a1.21.5

Integer types of number (byte, short, int, long) can add s or u as a suffix, which represents signed and unsigned numbers, respectively. (e.g. 240ub)

    These suffixes only affect the range when parsing, and the data is still stored in signed form (e.g. 240ub is equivalent with -16sb, and 240sb won't parse).
    Without these suffixes, decimal number is signed, while hexadecimal and binary number is unsigned by default.
    Single-byted hexadecimal number can only be written with symbolic suffix, since b is a valid hexadecimal number (e.g. 0x11ub).

25w09a1.21.5

New escape sequence can be used in strings.

    Unicode escape is now supported in the following formats:
        \x: 2-digit escape
        \u: 4-digit escape
        \U: 8-digit escape
        \N{<name>}: escape Unicode characters by name (e.g. \N{Snowman}=☃)
    The following internal escape is now supported:
        \b: backspace (\x08)
        \s: space (\x20)
        \t: horizontal tab (\x09)
        \n: new line (\u0a)
        \f: new page (\u0c)
        \r: enter (\u0d)
    Strings without quotation marks can not start with 0-9, ., + and - now.

25w09a1.21.5

Data in arrays without a suffix will assume they have a suffix that matches the type of the array (e.g. [B;1,2] is now equivalent with [B;1b,2b]).
25w09a1.21.5

Arrays now accept data that has a smaller type of itself (e.g. [I;1b,2s,3] is now equivalent with [I;1i,2i,3i]).
25w09a1.21.5

List and Compound now accept a single comma at the end, bur commas at the beginning and middle are not accepted (e.g. [1,2,] and {a:b,} is now accepted, but [,] and {a:b,,} is not accepted).
25w09a1.21.5

The campfire's CookingTimes and CookingTotalTimes fields will no longer be preserved when removed.
25w09a1.21.5

The chiseled bookshelf's last_interacted_slot field now defaults to -1 if not specified.
25w09a1.21.5

The hopper's TransferCooldown field now default to -1 if not specified.
25w09a1.21.5

For jigsaws, the name, target, and pool fields now default to minecraft:empty, and its final_state field defaults to minecraft:air if not specified.
25w09a1.21.5

The sculk shrieker's warning_level field now defaults to 0 if not specified.
25w09a1.21.5

For structure blocks, the ignoreEntities and showboundingbox fields now default to true, and its posY field defaults to 1 if not specified.
25w09a1.21.5

The FallFlying field will no longer be preserved if removed.
25w09a1.21.5

The Health and Air fields now default to their respective maximum value if not specified.
25w09a1.21.5

The area effect cloud's Duration field now defaults to -1 if not specified.
25w09a1.21.5

If an area effect cloud's Duration field is -1, it will never run out.
25w09a1.21.5

The creeper's Fuse field now defaults to 30, and its ExplosionRadius field now defaults to 3 if not specified.
25w09a1.21.5

The dolphin's Moistness field now defaults to 2400 if not specified.
25w09a1.21.5

The ender dragon's DragonDeathTime field now defaults to 0 if not specified.
25w09a1.21.5

For falling blocks:

    The BlockState field can now be air (will despawn immediately) - if otherwise not specified or invalid, defaults to sand.
    The HurtEntities field now defaults to false if not specified, or true if BlockState is anvil.
    The FallHurtAmount field now defaults to 0 if not specified.
    The FallHurtMax field now defaults to 40 if not specified.
    The DropItem field now defaults to true if not specified.
    The TileEntityData field will no longer be preserved if removed.

25w09a1.21.5

The firework rocket's ShotAtAngle field now defaults to false if not specified.
25w09a1.21.5

The fox's Trusted field now defaults to empty if not specified, and will no longer be merged with the previous state if modified by /data.
25w09a1.21.5

The ghast's ExplosionPower field now defaults to 1 if not specified.
25w09a1.21.5

The goat's HasLeftHorn and HasRightHorn fields now default to true if not specified.
25w09a1.21.5

The interaction entity's width and height fields now default to 1 if not specified.
25w09a1.21.5

For items:

    The Health field now defaults to 5 if not specified.
    The PickupDelay field now defaults to 0 if not specified.
    The Age field now defaults to 0 if not specified.
    The Owner and Thrower fields will no longer be preserved when removed.

25w09a1.21.5

The item frame and glowing item frame's ItemDropChance field now defaults to 1.0 if not specified.
25w09a1.21.5

For primed TNTs, the fuse field now defaults to 80, and the explosion_power field now defaults to 4 if not specified.
25w09a1.21.5

The shulker's Color field now defaults to 16 (no color) if not specified.
25w09a1.21.5

The skeleton's StrayConversionTime field will no longer be preserved when removed.
25w09a1.21.5

The snow golem's Pumpkin field now defaults to true if not specified.
25w09a1.21.5

The spectral arrow's Duration field now defaults to 200 if not specified.
25w09a1.21.5

For TNT minecarts:

    The fuse field now defaults to 80 if not specified.
    The explosion_power field now defaults to 4 if not specified.
    The explosion_speed_factor field now defaults to 1 if not specified.

25w09a1.21.5

The trader llama's DespawnDelay field now defaults to 47999.
25w09a1.21.5

For villagers, the FoodLevel and Xp fields now default to 0 if not specified, and the ConversionTime field will no longer be preserved when removed.
25w09a1.21.5

The wandering trader's DespawnDelay field now defaults to 0 if not specified.
25w09a1.21.5

The zombie's DrownedConversionTime field will no longer be preserved when removed.
25w09a1.21.5

For zombie villagers, the Xp field now defaults to 0 if not specified, and the ConversionTime field will no longer be preserved when removed.
25w09a1.21.5

For arrows, spectral arrows, and tridents, the damage field now defaults to 2 if not specified.
25w09a1.21.5

For dragon_fireball, wind_charge, breeze_wind_charge, wither_skull, small_fireball, and large_fireball, the acceleration_power field now defaults to 0.1 if not specified.
25w09a1.21.5

For small_fireball and large_fireball, the ExplosionPower field now defaults to 1 if not specified.
25w09a1.21.5

For all kinds of display entities:

    The interpolation_duration, teleport_duration, and start_interpolation fields now default to 0 if not specified.
    The view_range field now defaults to 1 if not specified.
    The shadow_radius field now defaults to 0 if not specified.
    The shadow_strength field now defaults to 1 if not specified.
    The width and height fields now default to 0 if not specified.

25w09a1.21.5

Added new feature fallen_tree and decorator attached_to_logs.
25w09a1.21.5

farmland is included in #dry_vegetation_may_place_on.
25w09a1.21.5

leaf_litter is included in #replaceable.
25w09a1.21.5

cactus_flower is included in #wall_post_override.
25w09a1.21.5

Client jar has a new option --renderDebugLabels, which add debug tags for related OpenGL objects to make it easier for developers to debug rendering.
25w08a1.21.5

Data pack format has been increased to 68.
25w08a1.21.5

Resource pack format has been increased to 53.
25w08a1.21.5

Added data-driven wolf sound variants, with entries in the wolf_sound_variant folder. The file takes fields ambient_sound, death_sound, growl_sound, hurt_sound, pant_sound, and whine_sound, which point to a sound event. Wolf sound variants are randomly applied to all wolves independent of the texture variant.
25w08a1.21.5

Added optional field dry_foliage_color in the biome effects, which defines the tinting color for leaf litter and other dry foliage blocks.
25w08a1.21.5

Added entity component wolf/sound_variant, a namespaced id from wolf_sound_variant registry.
25w08a1.21.5

When using the blocks_attacks item component, if the blocked damage has no position, the compared angle will default to 180 for the horizontal_blocking_angle field in damage_reductions.
25w08a1.21.5

Added the possibility to tint blocks based on a dry foliage color map.
25w08a1.21.5

Added sounds for the big, cute, puglin, angry, grumpy, and sad wolf sound variants.
25w08a1.21.5

The sound files for the classic wolf sound variant are moved under the classic subdirectory.
25w08a1.21.5

Removed the entity.wolf.howl sound event.
25w07a1.21.5

Data pack format has been increased to 67.
25w07a1.21.5

Resource pack format has been increased to 52.
25w07a1.21.5

The entity predicate stepping_on can now only evaluate to true if the entity is on the ground.
25w07a1.21.5

Added block tag #camels_spawnable_on, which contains blocks camels can spawn on.
25w07a1.21.5

Added structure tag #on_<biome>_village_maps, which contains structures that can spawn on explorer maps for that type, where <biome> is one of savanna, desert, plains, taiga, snowy, swamp, and jungle.
25w07a1.21.5

The Pos, Motion and Rotation entity data fields must take the correct number of components (3, 3, and 2, respectively), otherwise the data will now be discared.
25w07a1.21.5

The SleepingX, SleepingY, and SleepingZ entity data fields have been removed and combined into a single sleeping_pos field, which takes an array of three ints.
25w07a1.21.5

Block states defined in entity data of arrows, minecarts, block displays, endermen, falling blocks, primed tnt, and piston moving blocks can no longer be defined as an empty object.
25w07a1.21.5

The following entity data fields will no longer stay persistent when removed via /data or other data modification methods:

    fox: Trusted
    item: Owner and Thrower
    shulker bullet: Dir and Target
    villager and zombie villager: Gossips
    wandering trader: wander_target
    evoker fangs, area of effect cloud, and all projectiles: Owner
    arrow, spectral arrow, and trident: inBlockState and SoundEvent
    block, item, and text displays: glow_color_override
    witch, ravager, pillager, illusioner, evoker, and vindicator: patrol_target

25w07a1.21.5

Removed the CanDuplicate field in allay entity data, as it is already controlled via DuplicationCooldown.
25w07a1.21.5

The CollarColor field in cat and dog entity data defaults to 14 (red) if not specified.
25w07a1.21.5

Removed the TreasurePosX, TreasurePosY, and TreasurePosZ fields in dolphin entity data.
25w07a1.21.5

The BlockState field in falling block entity data can be defined as air, and defaults to sand if invalid or unspecified.
25w07a1.21.5

The Trusted field in fox entity data now defaults to empty if not specified.
25w07a1.21.5

For phantom entity data, the Size field is renamed to size, and AX, AY, and AZ fields are removed and combined into a single anchor_pos field.
25w07a1.21.5

For player entity data, the SpawnX, SpawnY, SpawnZ, SpawnAngle, SpawnDimension, and SpawnForced fields are removed and combined into a single respawn object field. The object has fields pos, angle, dimension, and forced.
25w07a1.21.5

For player entity data, the enteredNetherPosition field is renamed to entered_nether_pos, and now takes a list of doubles.
25w07a1.21.5

The block_state field in primed tnt entity data now defaults to tnt if not specified.
25w07a1.21.5

For turtle entity data, the HasEgg field is renamed to has_egg; the HomePosX, HomePosY, and HomePosZ fields are removed and combined into a single home_pos field; and the TravelPosX, TravelPosY, and TravelPosZ field are removed.
25w07a1.21.5

For vex entity data, the LifeTicks is renamed to life_ticks, and the BoundX, BoundY, and BoundZ fields are removed and combined into a single bound_pos field.
25w07a1.21.5

For item frame, glow item frame, and leash knot entity data, the TileX, TileY, and TileZ fields are removed and combined into a single block_pos field.
25w07a1.21.5

For minecart and minecart adjacent entity data, the CustomDisplayTile field is removed, the DisplayState field will always override the default displayed block state when specified, and DisplayOffset can now override the default offset even if a custom display block state set is not specified.
25w07a1.21.5

The following block data fields will no longer stay persistent when removed via /data or other data modification methods:

    all applicable: CustomName and LootTable
    end gateway: exit_portal
    furnace, smoker, and blast furnace: RecipesUsed
    skull: note_block_sound

25w07a1.21.5

Mooshroom models now have a snout.
25w07a1.21.5

Shader program definitions in JSON files for core shaders and post-processing effects have been removed.
25w07a1.21.5

Removed field program in shader definitions and replaced it with fields vertex_shader and fragment_shader, where <namespace>:<path> will resolve to assets/<namespace>/shaders/<path>.<vsh|fsh>.
25w07a1.21.5

In each uniform, the type field is now required, accepting value types of any int, ivec3, float, vec2, vec3, vec4, and matrix4.
25w07a1.21.5

In each uniform, the values field is now optional.
25w07a1.21.5

The firstperson_lefthand and thirdperson_lefthand transforms of item display entities are now rendered the same as when held in hand.
25w07a1.21.5

When an item stack entity is on the ground, model size is taken into account when deciding the hovering motion, preventing the item entity from clipping into the block below it.
25w06a1.21.5

Data pack format has been increased to 66.
25w06a1.21.5

Resource pack format has been increased to 51.
25w06a1.21.5

Added allowFireTicksAwayFromPlayer gamerule, which defaults to false. When true, lava and fire ticks may occur outside of an 8 chunk range from a player.
25w06a1.21.5

Renamed block tag #dead_bush_may_place_on to #dry_vegetation_may_place_on.
25w06a1.21.5

Added block tag #edible_for_sheep, consisting of blocks sheep can regrow their wool after eating.
25w06a1.21.5

Added item tag #eggs, consisting of variants of the egg item.
25w06a1.21.5

The player's armor and off-hand equipment is now also stored in the equipment field.
25w06a1.21.5

Chicken variants can now be data-driven, with entries in the chicken_variant folder. The file takes fields model (one of normal, cold, and warm), asset_id, and spawn_conditions.
25w06a1.21.5

Added entity and item component chicken/variant, a namespaced id from chicken_variant registry.
25w06a1.21.5

Moved texture entity/chicken.png to entity/chicken/temperate_chicken.png.
25w05a1.21.5

Data pack format has been increased to 65.
25w05a1.21.5

Resource pack format has been increased to 50.
25w05a1.21.5

Text component arguments in the /bossbar, /scoreboard, and /team commands are now resolved before use in context of entity held in @s.
25w05a1.21.5

Added block tag #plays_ambient_desert_block_sounds to contain all blocks that can play ambient desert block sounds.
25w05a1.21.5

Renamed damage type tag #bypasses_blocking to #bypasses_shield.
25w05a1.21.5

Cow variants can now be data-driven, with entries in the cow_variant folder. The file takes fields model (one of normal, cold, and warm), asset_id, and spawn_conditions.
25w05a1.21.5

Added data component cow/variant, a namespaced id from the cow_variant registry.
25w05a1.21.5

The item component blocks_attacks has two new fields:

    bypassed_by - A damage type tag that prevents the item from blocking when present
    Subfield horizontal_blocking_angle in damage_reductions - A positive float defining the maximum angle between the user's facing and incoming attack to successfully block the attack

25w05a1.21.5

Renamed texture pig to temperate_pig.
25w05a1.21.5

Renamed texture cow to temperate_cow.
25w05a1.21.5

Changes the size of the temperate_cow, red_mooshroom, and brown_mooshroom textures.
25w05a1.21.5

Cow models now have a snout
25w04a1.21.5

Data pack format has been increased to 64.
25w04a1.21.5

Resource pack format has been increased to 49.
25w04a1.21.5

The potion entity type has been split into splash_potion and lingering_potion.
25w04a1.21.5

Filled maps without a map_id component no longer show an 'Unknown Map' tooltip.
25w04a1.21.5

The background field in advancements no longer contains the textures/ prefix and .png suffix.
25w04a1.21.5

SNBT has been expanded to accept heterogenous lists. For example, ['a', {'b':3}] is stored as [{'':'a'},{'b':3}].
25w04a1.21.5

Added entity tag #can_wear_horse_armor to contain all entities which can hold horse armor in their body slot.
25w04a1.21.5

Renamed damage type tag #bypasses_shield to #bypasses_blocking.
25w04a1.21.5

Removed cat variant tags #default_spawns and #full_moon_spawns.
25w04a1.21.5

Replaced biome and similarly named fields with spawn_conditions, containing a list of entries with the fields priority (integer) and condition (optional object). The condition object has a type field, with additional fields dependent on type:

    Type biome - Checks if entity is in a biome, with field biomes accepting a single entry, list, or biome tag
    Type moon_brightness - Checks if the moon brightness is in the range range, a single number or floating point range object
    Type structures - Check if entity is in a structure, with field structures accepting a single entry, list, or structure tag

25w04a1.21.5

Wolf variants have the angry_texture, tame_texture, and wild_texture fields grouped into a single assets field, renamed to angry, tame, and wild respectively.
25w04a1.21.5

Pig variants have the texture field renamed to asset_id.
25w04a1.21.5

Cat variants can now be data-driven, with entries in the cat_variant folder. The file takes fields asset_id and spawn_conditions.
25w04a1.21.5

Frog variants can now be data-driven, with entries in the frog_variant folder. The file takes fields asset_id and spawn_conditions.
25w04a1.21.5

The can_disable_blocking field is replaced with disable_blocking_for_seconds in the weapon component, taking a non-negative float to disable a shield for the specified amount of seconds.
25w04a1.21.5

Added item component blocks_attacks, which allows the item to block attacks like a shield when present with the following fields:

    block_delay_seconds - Non-negative float representing the amount of seconds right-click must be held before successfully blocking attacks
    disable_cooldown_scale - Non-negative float representing a multiplier applied to the number of seconds the item is on cooldown for after blocking an attack that can disable it
    damage_redution - List of objects controlling how much damage is blocked per attack. Each object has the fields type (blocks only if specific damage type is used), base (constant amount of damage to block), and factor (fraction of damage to block)
    item_damage - Object controlling how much durability damage is dealt to the item. The object has the fields threshhold (minimum attack damage before item damage is applied), base (contant amount of damage to apply), and factor (fraction of damage to apply).
    block_sound - Optional sound effect to play when an attack is successfully blocked
    disable_sound - Optional sound effect to play when an attack disables the item

25w04a1.21.5

Added item component break_sound, which is a sound event that plays when the item runs out of durability and breaks.
25w04a1.21.5

Added item component provides_banner_patterns, which is a banner pattern tag allowing the item to be placed in the pattern slot of a loom.
25w04a1.21.5

Added item component provides_trim_material, which is a trim material id provided when used in a trimming recipe.
25w04a1.21.5

The custom_name, potion_contents, and potion_duration_scale entity components are now transferred from spawning item to entity.
25w04a1.21.5

Removed item components hide_additional_tooltip and hide_tooltip.
25w04a1.21.5

Added item component tooltip_display, allowing tooltips provided by an item component to be surpressed. It is an object with fields hide_tooltip (boolean to hide all tooltips) and hidden_components (list of item component ids to surpress tooltips from).
25w04a1.21.5

Removed the show_in_tooltip field for the attribute_modifiers, dyed_color, can_place_on, can_break, enchantments, stored_enchantments, jukebox_playable, trim, and unbreakable components. It is replaced by the new tooltip_display component.
25w04a1.21.5

The tinted_leaves particle type now takes a color field, either as a packed integer or list of 4 integers.
25w04a1.21.5

The base field in the crafting_transmute recipe type is no longer optional.
25w04a1.21.5

The base, template, and addition fields in the smithing_trim recipe type are no longer optional.
25w04a1.21.5

Added a pattern field to the smithing_trim recipe type, a trim pattern id controlling which trim pattern is applied in the recipe.
25w04a1.21.5

Definitions for trim patterns and materials no longer include an item field, instead being defined by the recipe.
25w04a1.21.5

The toggle_tooltips field now supports any component id in the toggles map.
25w04a1.21.5

Selected values from the component data source in select item models will silently ignore missing entries instead of ignoring the entire item model.
25w04a1.21.5

Added new conditional model property component to the condition item model, using component predicates to match item components. It takes fields predicate (member of data_component_predicate_type) and value (predicate value).
25w04a1.21.5

Added new separator field to the paletted_permutations sprite source, an optional string used when joining texture and permutation names for the sprite name.
25w03a1.21.5

Data pack format has been increased to 63.
25w03a1.21.5

Resource pack format has been increased to 48.
25w03a1.21.5

New entry point net.minecraft.gametest.Main is present in the server jar, which starts the server and runs all available game tests.
25w03a1.21.5

Added game tests, which is an integrated system for testing aspects of the game. A test is made of parameters defining how the test should be executed, with a structure file for the base setup.
25w03a1.21.5

Test instances are defined in the test_instance registry with the following fields:

    environment - Namespaced id of the test environment to run the test with
    structure - Namespaced id of the structure to use for the test
    max_ticks - Positive integer representing the maximum ticks allowed before the test times out
    setup_ticks - Optional non-negative integer (0) representing ticks to wait between placing the structure and beginning the test
    required - Optional boolean (true) for if the test must pass for the full test suite to pass
    rotation - Optional rotation to apply to the structure, one of none (default), clockwise_90, 180, and counterclockwise_90
    manual_only - Optional boolean (false) to not be included in automated test runs
    sky_access - Optional boolean (false) for whether the test requires sky access
    max_attempts - Optional integer (1) defining the number of attempts to run the test for
    required_successes - Optional integer (1) defining the number of successful attempts required for the test to be successful
    type - The type of test, one of block_based and function
    function - Namespaced if of the test function to run, only used for function type tests

25w03a1.21.5

Test environments are a way to group tests to be run together, defined in the test_environment registry. Each test environment has a type field, which determines the other required fields for the environment.

    Type all_of - A list of test environments definitions, either inlined or referenced
    Type function - Optional namespaced function ids setup and teardown
    Type game_rules - A list of game rules bool_rules and int_rules, each rule being an object with two fields rule and value
    Type weather - Weather weather to set, being one of clear, rain, and thunder
    Type time_of_day - The non-negative number of ticks time to set the day

25w03a1.21.5

Added the test_block block used for implementing block-based game tests. It has four modes:

    start - Triggers a redstone pulse upon the start of the test
    log - Logs a message to the log file when powered by redstone
    fail - Fails the test when powered by redstone
    accept - Completes the test when powered by redstone

25w03a1.21.5

Added the /test command, used to create and run tests. It has the following syntax options:

    test clearall [<radius>]
    test clearthat
    test clearthese
    test create <test> [<width>] [<height> <depth>]
    test locate <selector>
    test resetclosest
    test reseetthese
    test resetthat
    test pos [<variable>]
    test run <selector> [<numberOfTimes>] [<untilFailed>] [<rotationSteps>] [<testsPerRow>]
    test runclosest [<numberOfTimes>] [<untilFailed>]
    test runfailed [<numberOfTimes>] [<untilFailed>] [<rotationSteps>] [<testsPerRow>]
    test runmultiple <selector> [<amount>]
    test runthat [<numberOfTimes>] [<untilFailed>]
    test runthese [<numberOfTimes>] [<untilFailed>]
    test stop
    test verify <tests>

25w03a1.21.5

The item slot horse.saddle has been renamed to saddle, and supports any entity that can equip a saddle.
25w03a1.21.5

In the show_text hover event action, text has been renamed to value.
25w03a1.21.5

Added entity tag #can_equip_saddle to contain all entities which can be equipped with a saddle. This does not control whether the saddle will function.
25w03a1.21.5

The ArmorItems, HandItems, and body_armor_item fields have been merged into a single field equipment, which is a map of equipment slots to item stacks.

    Valid equipment slots include head, chest, legs, feet, mainhand, offhand, body, and saddle.

25w03a1.21.5

The saddle data format has been unified between mobs such as horses and pigs, becoming a new equipment slot equipment.saddle. This replaces the Saddle boolean flag from pigs and striders.
25w03a1.21.5

Added saddle slot to the drop_chances field.
25w03a1.21.5

The FallDistance field has been renamed to fall_distance and now takes a double instead of a float.
25w03a1.21.5

In the weapon item components, the damage_per_attack field has been renamed to item_damage_per_attack.
25w03a1.21.5

The equippable item component can now be applied to the saddle slot. If the component allows it, any mob can have equipment added in te body slot.
25w03a1.21.5

The equippable item component has a new optional boolean field equip_on_interaction. If true, players can equip the item onto a mob by right-clicking.
25w03a1.21.5

Added a set of components for both entities and items for configuring variants and appearances. If present on a spawning item such as a spawn egg or mob bucket, the components will be applied to the entity. The components are as follows:

    villager/variant - one of desert, jungle, plains, savanna, snow, swamp, taiga
    wolf/variant - namespaced id from wolf_variant registry
    wolf/collar - one of 16 dye colors
    fox/variant - one of red, snow
    salmon/size - one of small, medium, large
    parrot/variant - one of red_blue, blue, green, yellow_blue, gray
    tropical_fish/pattern - one of kob, sunstreak, snooper, dasher, brinely, spotty, flopper, stripey, glitter, blockfish, betty, clayfish
    tropical_fish/base_color - one of 16 dye colors
    tropical_fish/pattern_color - one of 16 dye colors
    mooshroom/variant - one of red, brown
    rabbit/variant - one of brown, white, black, white_splotched, gold, salt, evil
    pig/variant - namespaced id from pig_variant registry
    frog/variant - namespaced id from frog_variant registry
    horse/variant - one of white, creamy, chestnut, brown, black, gray, dark_brown
    painting/variant - namespaced id from painting_variant registry
    llama/variant - one of creamy, white, brown, gray
    axolotl/variant - one of lucy, wild, gold, cyan, blue
    cat/variant - namespaced id from cat_variant registry
    cat/collar - one of 16 dye colors
    sheep/color - one of 16 dye colors
    shulker/color - one of 16 dye colors

25w03a1.21.5

Tooltips for bucket of tropical fish and painting items are based off of new components instead of bucket_entity_data and entity_data.
25w03a1.21.5

New optional field components has been added to entity predicates to match the components of the entity. The following entity sub-predicates are removed and replaced with the components predicate and variant entity components: axolotl, fox, mooshroom, rabbit, horse, llama, villager, parrot, salmon, tropical_fish, painting, cat, frog, wolf, pig, and the color field from sheep.
25w03a1.21.5

Added the following new equipment asset layer types:

    pig_saddle
    strider_saddle
    camel_saddle
    horse_saddle
    donkey_saddle
    mule_saddle
    skeleton_horse_saddle
    zombie_horse_saddle

25w03a1.21.5

Two textures have been moved to support equipment assets for saddles:

    entity/pig/pig_saddle.png → entity/equipment/pig_saddle/saddle.png
    entity/strider/strider_saddle.png → entity/equipment/strider_saddle/saddle.png

25w03a1.21.5

The following textures have been split from the base entity texture to qupport quipment assets for saddles:

    entity/camel/camel.png → entity/equipment/camel_saddle/saddle.png
    entity/horse/horse_<variant>.png → entity/equipment/horse_saddle/saddle.png
    entity/horse/donkey.png → entity/equipment/donkey_saddle/saddle.png
    entity/horse/mule.png → entity/equipment/mule_saddle/saddle.png
    entity/horse/horse_skeleton.png → entity/equipment/skeleton_horse_saddle/saddle.png
    entity/horse/horse_zombie.png → entity/equipment/zombie_horse_saddle/saddle.png

25w03a1.21.5

Added component data source to select item models, returning the value of the component on the item. It takes field component, a namespaced id of the component type.
25w02a1.21.5

Data pack format has been increased to 62.
25w02a1.21.5

Resource pack format has been increased to 47.
25w02a1.21.5

Added pig variants, which are stored in the pig_variant sub-folder. It has fields biome (list of biomes or tag), model (one of normal or cold), and texture (resource locations ending with .png).
25w02a1.21.5

Added new entity sub-predicate pig for matching pig variants.
25w02a1.21.5

Structure blocks in the LOAD mode have a new option Strict Placement. When set to false, block updates will not be triggered upon placement.
25w02a1.21.5

The Owner field of tamed animals is no longer restricted to referencing players.
25w02a1.21.5

Text components are specified with SNBT instead of JSON wrapped in a string.

    This change occurs in places such as the /title and /tellraw commands, or in item components.
    For example, custom_name="{\"text\":\"Renamed item\"}" is now custom_name={text:'Renamed item'}.

25w02a1.21.5

Text style is specified with SNBT instead of JSON in the /scoreboard command when the styled number format is specified.
25w02a1.21.5

The text component hoverEvent has been renamed to hover_event.

    The value field is no longer supported.
    In the show_text action, contents has been renamed to text.
    In the show_item action, contents has been inlined. If the only data inside it was an item id, it is instead fully replaced with an id field.
    In the show_entity action, contents has been inlined, id has been renamed to uuid, and type has been renamed to id.

25w02a1.21.5

The text component clickEvent has been renamed to click_event.

    In the open_url action, value has been renamed to url.
    In the run_command and suggest_command actions, value has been renamed to command. The / prefix is now optional.
    In the change_page action, value has been renamed to page, and page requires a positive integer instead of a string.
    In the event of an invalid URI or disallowed characters, events will no longer parse instead of simply not working.

25w02a1.21.5

The /setblock and /fill commands handle block entity data according to the following new rules:

    Existing block entity data is preserved if not specified in the command, otherwise it is overwritten.
    To clear block entity data, {} must be specified in the command.
    The command's operation is considered successful if either the block state or the block entity data changed.

25w02a1.21.5

The commands /fill, /clone, /setblock, and /place template accept new option strict, which places blocks as-is without block updates.
25w02a1.21.5

The replace option in the /fill command no longer forces the end of the command, and can now be followed with additional options.
25w02a1.21.5

Added block tag #replaceable_by_mushrooms to describe all blocks replaceable by a placed or grown mushroom.
25w02a1.21.5

Added block tag #sword_instantly_mines to describe all blocks instantly destroyed by swords.
25w02a1.21.5

Added item tag #book_cloning_target to describe all items which can be crafted together with a written book to clone the book.
25w02a1.21.5

Added biome tags #spawns_cold_variant_farm_animals and #spawns_warm_variant_farm_animals to describe all biomes that spawn cold and warm farm animal variants, respectively.
25w02a1.21.5

The ArmorDropChances, HandDropChances, and body_armor_drop_chance fields have been merged into a single field drop_chances.

    Valid equipment slots include head, chest, legs, feet, mainhand, offhand, and body.
    If not specified, chances default to 0.085f. Default chances are not stored, and if all chances are default, the entire drop_chances field is removed.

25w02a1.21.5

Area effect clouds have a new field potion_duration_scale, which scales the duration of the potion. Those created by lingering potions have a scale of 0.25, but otherwise defaults to 1.0.
25w02a1.21.5

The result field in the crafting_transmute recipe type supports specifying a count and components patch.

    The new format is an object with the fields of id (item id), count (positive integer), and components (component patch object).
    The previous format of an inlined item id is still supported.

25w02a1.21.5

Added item component weapon, which increments the Item Used statistic when present, and specifies item damage done with each attack.

    The format is an object with fields damage_per_attack (integer amount to damage the weapon on each attack) and can_disable_shield (disables a blocking Shield if true).

25w02a1.21.5

Added item component potion_duration_scale, which scales effects by a float when the potion_contents or custom_effects components are present.
25w02a1.21.5

Added optional field can_destroy_blocks_in_creative to the tool item component, which prevents the breaking of blocks with the item in Creative if set to false.
25w02a1.21.5

Changed the size of the pig texture.
1.21.4-pre21.21.4

Data pack format has been increased to 61.
1.21.4-pre21.21.4

Renamed some block entity fields in furnace, smoker and blast_furnace blocks:

    CookTime → cooking_time_spent
    CookTimeTotal → cooking_total_time
    BurnTime → lit_time_remaining
    Added field lit_total_time (total time the furnace should be lit)

1.21.4-pre11.21.4

Resource pack format has been increased to 46.
1.21.4-pre11.21.4

Similarly to block items, spawn eggs now can have a warning in the tooltip if they could execute operator-only commands.
1.21.4-pre11.21.4

Updated Unifont to 16.0.01.
1.21.4-pre11.21.4

Added optional field hand_animation_on_swap (boolean) to resource pack item format.
1.21.4-pre11.21.4

Added tint source team with field default (RGB color).
1.21.4-pre11.21.4

Added field animation (float) to head special model type for the piglin ears and ender dragon jaw.
1.21.4-pre11.21.4

Added boolean property view_entity.
1.21.4-pre11.21.4

Renamed string property holder_type → context_entity_type
1.21.4-pre11.21.4

Added string property context_dimension.
1.21.4-pre11.21.4

Changed time numeric property. Removed field natural_only and added source, which can be one of daytime, moon_phase, or none.
1.21.4-pre11.21.4

Changed compass numeric property. Added possible value none to target field.
1.21.4-pre11.21.4

Added item model type empty which doesn't render anything.
24w46a1.21.4

Data pack format has been increased to 60.
24w46a1.21.4

Resource pack format has been increased to 45.
24w46a1.21.4

Removed entity type creaking_transient. Instead added field home_pos to creaking entity NBT, which is a list of 3 ints specifying the block position of the creaking heart.
24w46a1.21.4

Added field creaking, which is a UUID specifying the linked creaking mob.
24w46a1.21.4

Added option bundle to the animation field in the consumable item component.
24w46a1.21.4

Removed item tag #trim_templates.
24w46a1.21.4

Renamed _preferred_weapon item tags to plural versions: #skeleton_preferred_weapons, #piglin_preferred_weapons, #pillager_preferred_weapons, and #drowned_preferred_weapons. Add item tag #wither_skeleton_disliked_weapons.
24w46a1.21.4

Blocks that previously has a special block entity renderer (banners, heads, beds, chests, conduits, decorated pots, shulker boxes and signs) will now also render normal block model over it.
24w46a1.21.4

Changed the head special model type. Added optional field texture referencing a texture in the entity/ folder. If present, profile component is ignored.
24w46a1.21.4

Added standing_sign and hanging_sign special model types. They have fields wood_type and texture.
24w46a1.21.4

Removed xmas boolean property, replaced with local_time, with fields locale, time_zone, and pattern.
24w46a1.21.4

Removed shift_down boolean property, replaced with extended_view, which returns true if the player is holding shift in the UI.
24w46a1.21.4

Changed the has_component boolean property. Added optional field ignore_default (boolean), which defaults to false.
24w46a1.21.4

Added boolean property keybind_down, with field keybind.
24w46a1.21.4

Added string property holder_type, which returns the entity type of the item holder for compasses and clocks.
24w45a1.21.4

Data pack format has been increased to 59.
24w45a1.21.4

Resource pack format has been increased to 44.
24w45a1.21.4

The data generator net.minecraft.data.Main in the server jar no longer generates the assets folder with the --client option. Instead use the net.minecraft.client.data.Main data generator in the client jar.
24w45a1.21.4

Tooltip warnings on item blocks with block_entity_data can no longer be hidden by other components.
24w45a1.21.4

Changed equippable component. Renamed field model → asset_id.
24w45a1.21.4

Changed custom_model_data component. Instead of a single integer it now takes an object with optional fields: floats (list of floats), flags (list of booleans), strings (list of string), and colors (list of RGB colors).
24w45a1.21.4

Changed set_custom_model_data item modifier. Instead of a single value field, it now has optional list operation fields: floats, flags, strings, and colors.
24w45a1.21.4

Removed field item_model_index in trim materials.
24w45a1.21.4

Added block tag #bee_attractive to describe all blocks that bees may pollinate.
24w45a1.21.4

Removed block tag #tall_flowers. Removed item tags #flowers and #tall_flowers.
24w45a1.21.4

Added item tags #skeleton_preferred_weapon, #piglin_preferred_weapon, #pillager_preferred_weapon, and #drowned_preferred_weapon.
24w45a1.21.4

Moved the folder models/equipment → equipment.
24w45a1.21.4

Renamed texture and model broken_elytra → elytra_broken.
24w45a1.21.4

Removed the overrides field in item models. Instead the different models can be configured in the new items folder.
24w45a1.21.4

Added new format to describe item models in the folder items. It has a single field models with a field type. The different model types are currently:

    model: has fields model (model reference), and tints (tint source)
    special: has fields special (typed special model), and base (model reference)
    composite: has fields models, same type as the root models field in this file
    condition: has fields property + more fields, on_true, and on_false
    select: has fields property + more fields, cases, and fallback
    range_dispatch: has fields property + more fields, scale, entries, and fallback
    bundle/selected_item: no fields

24w44a1.21.4

Data pack format has been increased to 58.
24w44a1.21.4

Resource pack format has been increased to 43.
24w44a1.21.4

Added reset subcommand to the /attribute command:

    attribute <target> <attribute> base reset

24w44a1.21.4

Added optional field shadow_color to text component style. It can either be a packed ARGB integer, or a list of 4 floats in the RGBA order.
24w44a1.21.4

Changed particle type trail. Added required field duration, which is a positive float.
24w44a1.21.4

Added particle type pale_oak_leaves.
24w44a1.21.4

Removed feature flag winter_drop.
24w44a1.21.4

Changed NBT of tnt_minecart:

    Renamed field TNTFuse to fuse
    Added optional field explosion_speed_factor (float between 0 and 128)

24w44a1.21.4

Items with the block_entity_data component will now only set the data if id matches the block entity type that was placed.
24w44a1.21.4

Changed biome effects field music. It now is a weighted list of music objects. The list is also allowed to be empty.
24w44a1.21.4

Added optional field music_volume (float) to biome effects.
24w44a1.21.4

Changed feature simple_block. Added optional field schedule_tick, which is a boolean.
24w44a1.21.4

The toast/system texture has been changed to use a nine-sliced texture. The toast/tutorial texture was unchanged, but nine-slicing is enabled.
24w44a1.21.4

The advancements/box_obtained and advancements/box_unobtained textures now have nine-slicing enabled.
24w44a1.21.4

Added a new event to the /jfr command: StructureGeneration.
1.21.2-pre31.21.2

Resource pack format has been increased to 42.
1.21.2-pre21.21.2

Added core shader rendertype_armor_translucent, which is used for the cracks on wolf armor.
1.21.2-pre11.21.2

Data pack format has been increased to 57.
1.21.2-pre11.21.2

Resource pack format has been increased to 41.
1.21.2-pre11.21.2

Added disablePlayerMovementCheck game rule. It defaults to false.
1.21.2-pre11.21.2

Changed data component equippable. Added optional field camera_overlay, which is a texture reference to render when equipped.
1.21.2-pre11.21.2

Changed particle color options to be more standardized. Particles trail, dust, and dust_color_transition now allow both a list of floats, or a packed int describing the color.
24w40a1.21.2

Data pack format has been increased to 56.
24w40a1.21.2

Resource pack format has been increased to 40.
24w40a1.21.2

Added feature flag winter_drop.
24w40a1.21.2

Added particle types block_crumble with the block_state option, and trail with the color and target options.
24w40a1.21.2

leash_knots, fishing_bobbers, and lightning_bolts are no longer rideable with /ride.
24w40a1.21.2

Added the /rotate command, with syntax:

    rotate <target> <rotation>
    rotate <target> facing <facingLocation>
    rotate <target> facing entity <facingTarget> [<facingAnchor>]

24w40a1.21.2

Renamed enchantment effect type damage_item to change_item_damage, which now accepts negative numbers.
24w40a1.21.2

Added item tag gaze_disguise_equipment for items that disguise the player from mobs when equipped.
24w39a1.21.2

Data pack format has been increased to 55.
24w39a1.21.2

Removed feature flag bundle.
24w39a1.21.2

Removed the boat and chest_boat entity types. They are replaced with separate entities for each wood type, in the format of [wood]_boat and [wood]_chest_boat.
24w39a1.21.2

The Lock field on containers has been renamed to lock, and now accepts an item predicate instead of a string.
24w39a1.21.2

Added entity type tag boat.
24w39a1.21.2

Added item tag map_invisibility_equipment for items that hide player markers on maps when equipped.
24w39a1.21.2

Removed the minecraft:boat entity sub-predicate.
24w38a1.21.2

Data pack format has been increased to 54.
24w38a1.21.2

Resource pack format has been increased to 39.
24w38a1.21.2

Added item tag bundles.
24w38a1.21.2

Added crafting_transmute recipe type, replacing crafting_special_shulkerboxcoloring. It has fields category, group, input, material, and result.
24w38a1.21.2

Added 16 colored variants for the bundle.
24w38a1.21.2

Updated the models, inverted models, and UV mapping for the torch, redstone torch, and blocks containing the redstone torch.
24w37a1.21.2

Data pack format has been increased to 53.
24w37a1.21.2

Resource pack format has been increased to 38.
24w37a1.21.2

The tool context is now also available for loot table types archaeology, vault, and shearing.
24w37a1.21.2

Chickens laying eggs is now controlled by loot table gameplay/chicken_lay.
24w37a1.21.2

Armadillos randomly dropping scutes is now controlled by loot table gameplay/armadillo_shed.
24w37a1.21.2

Loot given by villagers for the hero of the village effect now also uses loot tables gameplay/hero_of_the_village/unemployed_gift and gameplay/hero_of_the_village/baby_gift.
24w37a1.21.2

Added item tags duplicates_allays, panda_eats_from_ground, and brewing_fuel.
24w37a1.21.2

Removed data component fire_resistant and replaced it with damage_resistant. It now has field types, which is a hash-prefixed damage type tag. It controls whether the item in entity form is blocks all damage from these types and prevents the item taking damage when being equipped.
24w37a1.21.2

Changed data component potion_contents. Added optional field custom_name, which will cause the item name to use translation key item.minecraft.<item>.effect.<custom_name>.
24w37a1.21.2

Changed data component equippable. Added optional fields swappable (boolean) and damage_on_hurt (boolean), which both default to true.
24w37a1.21.2

Added data component death_protection. If present will protect the holder from dying by restoring a single health point. It has a single field death_effects, which has the same format as on_consume_effects from the consumable component.
24w37a1.21.2

Added entity sub predicate salmon. It has field variant which is one of small, medium, and large.
24w37a1.21.2

Renamed the advancement trigger killed_by_crossbow to killed_by_arrow. Now has a field fired_from_weapon, which is an item predicate matching the item used to shoot the arrow.
24w37a1.21.2

The texture of the highlighted slot in a GUI can now be customized using textures container/slot_highlight_front and container/slot_highlight_back. Likewise, the textures for highlighted slots in a bundler use the textures container/bundle/slot_highlight_front and container/bundle/slot_highlight_back.
24w36a1.21.2

Data pack format has been increased to 52.
24w36a1.21.2

Resource pack format has been increased to 37.
24w36a1.21.2

Added block tag bats_spawnable_on.
24w36a1.21.2

Added item tags piglin_safe_armor, which determines which items will not cause piglins to get angry when worn by players.
24w36a1.21.2

Added item tags repairs_leather_armor, repairs_iron_armor, repairs_chain_armor, repairs_gold_armor, repairs_diamond_armor, repairs_netherite_armor, repairs_turtle_helmet, and repairs_wolf_armor. They control which items can be used to repair the corresponding armor set.
24w36a1.21.2

The item_name data component is now always present on every item.
24w36a1.21.2

Added data component item_model, which allows a resource location as value. It is present on every item by default and controls the item model in the models/item folder.
24w36a1.21.2

Added data component equippable. It has fields slot, equip_sound, model, allowed_entities, and dispensable.
24w36a1.21.2

Added data component glider. If present and equipped, allows players to glide just like the elytra.
24w36a1.21.2

Added data component tooltip_style, which allows a resource location as value. This will customize the tooltip background using two sprites in <namespace>:tooltip/<path>_background and <namespace>:tooltip/<path>_frame.
24w36a1.21.2

Added new field in player sub predicate: input. It can be used to detect which movement keys the player is pressing. It has boolean fields: forward, backward, left, right, jump, sneak, and sprint.
24w36a1.21.2

The tooltip background and frame textures can now be customized by replacing the spites tooltip/background and tooltip/frame.
24w36a1.21.2

Added new field to nine_slice scaling mode: stretch_inner (boolean). If true, the inner parts of the texture (i.e. not the corners) will be stretched instead of tiled.
24w36a1.21.2

All item models can now use the broken predicate in model overrides. It was previously limited to elytra.
24w36a1.21.2

Equipment models can now be defined in the models/equipment folder. It has a different format than other models, with optional fields: wolf_body, horse_body, llama_body, humanoid, humanoid_leggings, and wings. Each field specifies a list of layers, which has fields texture, dyable, and use_player_texture.
24w36a1.21.2

All equippable items now support rendering trims based on the trim component. It will look for a texture in textures/trims/entity/<layer_type>.
24w36a1.21.2

All equipment-related textures have been moved to subfolders of the textures/entity/equipment directory. All armor trim textures have been moved and renamed to subfolders of textures/trims/entity.
24w35a1.21.2

Data pack format has been increased to 51.
24w35a1.21.2

Trial spawner configuration fields normal_config and ominous_config can now also be defined as a reference to files in the trial_spawner folder.
24w35a1.21.2

Entity rotation on the X-axis is now clamped between -90 and 90.
24w35a1.21.2

The /loot command now returns an error when trying to drop from a block without a loot table (like air).
24w35a1.21.2

Removed the special loot table empty.
24w35a1.21.2

Sheep drops now always use the entities/sheep loot table.
24w35a1.21.2

Sheep shearing is now controlled by loot table shearing/sheep.
24w35a1.21.2

Mooshroom shearing is now controlled by loot table shearing/mooshroom.
24w35a1.21.2

Added entity sub predicate sheep, with two optional fields: sheared (boolean) and color (string).
24w34a1.21.2

Data pack format has been increased to 50.
24w34a1.21.2

Resource pack format has been increased to 36.
24w34a1.21.2

Added data component consumable which makes an item consumable. It accepts an object with fields consume_seconds, animation, sound, has_consume_particles, and on_consume_effects.
24w34a1.21.2

Added data component use_remainder, which can have a single item stack as value. If present, will replace the item if its stack count has decreased after use.
24w34a1.21.2

Added data component use_cooldown. If present, will apply a cooldown to all items of the same type when it has been used. It is an object with fields seconds (positive float) and cooldownGroup (resource location). Weird casing is a typo and is corrected in the next snapshot.
24w34a1.21.2

Changed the food data component to only hold the food stats, it no longer makes the item consumable. Removed fields eat_seconds, using_converts_to, and effects.
24w34a1.21.2

Removed shader rendertype_entity_glint_direct and replaced it with rendertype_entity_glint.
24w34a1.21.2

Removed shader rendertype_entity_translucent_cull and replaced it with rendertype_item_entity_translucent_cull.
24w34a1.21.2

Changed shader program definitions for post-processing effects, defined in shaders/program, to be consistent with core shaders:

    Removed unused field blend
    Removed field attributes, instead the Position attribute will always be bound
    Renamed Time uniform to GameTime
    The vertex and fragment references are now resource locations

24w34a1.21.2

Shader source files are no longer required to be in the shaders/core subdirectory, this only exists for organization.
24w34a1.21.2

Added defines field to shader programs, which is an object with fields values and flags. It allows GLSL #define directives to be injected into the shader source.
24w34a1.21.2

The #moj_import shader directive now supports namespaced includes with absolute paths. Relative imports behave as before.
24w34a1.21.2

Moved post-processing effect configurations from shaders/post to post_effect.

    Vertex and fragment shaders used by these effects have been moved from shaders/program to shaders/post.
    The name field has been renamed to program, and is now a resource location to the shaders folder.

24w33a1.21.2

Data pack format has been increased to 49.
24w33a1.21.2

Resource pack format has been increased to 35.
24w33a1.21.2

Added experimental feature flags minecart_improvements and redstone_experiments.
24w33a1.21.2

Attribute IDs no longer have generic., player., and zombie. prefixes.
24w33a1.21.2

Added attribute tempt_range, with a range between 0 and 2048, and default of 10. It can be used to change the range, in blocks, at which temptable mobs can be tempted.
24w33a1.21.2

Changed format of ingredients in recipes:

    { "item": "<item id>" } is now "<item id>"
    { "tag": "<tag id>" } is now "#<tag id>"
    List of ingredients is still allowed, but cannot contain tags

24w33a1.21.2

Changed smithing_transform and smithing_trim recipe types. The fields template, base, and addition are now optional, instead of allowing an empty list.
24w33a1.21.2

Added field explosion_power to entities tnt and tnt_minecart. It is a float between 0 and 128, defaulting to 4.
24w33a1.21.2

Invalid selector patterns in chat components will now cause commands to fail to parse, instead of resolving to an empty string.
24w33a1.21.2

Added minecartMaxSpeed game rule, which allows an integer between 1 and 1000.
24w33a1.21.2

Made shearing of sheep, mooshrooms and snow golems data driven by loot tables.
24w33a1.21.2

Added data-driven instruments, which are stored in the instrument folder. It has fields sound_event, use_duration, range, and description.
24w33a1.21.2

Changed painting variants. Added fields author and title. They are both text components (not stringified).
24w33a1.21.2

Added data component enchantable. If present (and any enchantments are applicable), this item can be enchanted in an enchanting table. It is an object with a single field value (integer at least 1).
24w33a1.21.2

Added data component repairable. If present, and this item is damageable, this item can be repaired in an anvil using the specified ingredient. It is an object with a single field items (item ID, list of item IDs, or item tag).
24w33a1.21.2

Changed inline format of instrument component. Added field description, which is a text component (not stringified).
24w33a1.21.2

Added damage types ender_pearl and mace_smash.
24w33a1.21.2

Removed liquid carvers. Changed biome format. The carvers field is now directly a list of carvers.
24w33a1.21.2

Added item tag furnace_minecart_fuel, determinining whether the item can be used to refuel furnace minecart.
24w33a1.21.2

Added item tag villager_picks_up
24w33a1.21.2

Added optional field light_emission to model elements. It is an integer between 0 and 15 (inclusive).
24w33a1.21.2

Added inactivityFpsLimit client option in options.txt, with possible values minimized and afk.
24w33a1.21.2

Added server property pause-when-empty-seconds to server.properties, with default value 60.
24w33a1.21.2

Removed server properties spawn-animals and spawn-npcs from server.properties.
24w33a1.21.2

Added the client_tick_end serverbound packet during the play phase, sent when the client finishes processing its current tick.
24w33a1.21.2

Added ability for custom servers to override the order that players appear in the tab list.
24w33a1.21.2

The client now shares the state of the 'Particles' limiter option to be used by custom servers.
1.21-pre31.21

Data pack format has been increased to 48.
1.21-pre31.21

Renamed enchantment entity effect type replace_disc to replace_disk.
1.21-pre21.21

Data pack format has been increased to 47.
1.21-pre21.21

Added placement modifier type fixed_placement for placing features in fixed positions.
1.21-pre21.21

Added feature type end_platform for the obsidian spawn platform in the end.
1.21-pre11.21

Data pack format has been increased to 46.
1.21-pre11.21

Removed the entitiesWithPassengersCanUsePortals gamerule.
1.21-pre11.21

Report data generator now includes information about network packets.
1.21-pre11.21

The game will now store reports from failed chunks' loads and saves in the debug directory.
1.21-pre11.21

Added optional field liquid_settings to jigsaw type structures, deciding how waterloggable blocks should generate when overlapped with water. Can be one of apply_waterlogging (default) and ignore_waterlogging.
1.21-pre11.21

Added optional field override_liquid_settings to single_pool_element structure element type, deciding how waterloggable blocks should generate when overlapped with water. Can be one of apply_waterlogging (default) and ignore_waterlogging.
1.21-pre11.21

Added level-based value lookup, which maps a list of values to specific levels. It has fields values (list of indexed values) and fallback (value to apply if level is greater than size of values).
1.21-pre11.21

Changed enchantment definitions. All effect conditions must be inline objects instead of references.
1.21-pre11.21

Removed the #fire_aspect_lightable block tag.
1.21-pre11.21

Removed the chance field in the random_chance_with_enchanted_bonus condition. It has been replaced by unenchanted_chance and enchanted_chance, the chance and level-based value chance, respectively.
24w21a1.21

Data pack format has been increased to 45.
24w21a1.21

Resource pack format has been increased to 34.
24w21a1.21

Servers can now provide a list of links to the client.
24w21a1.21

Added a new custom_report_details clientbound packet in configuration and game protocols, containing a list of key-value text entries to be added in a separate section to crash or disconnection reports.
24w21a1.21

Added the entitiesWithPassengersCanUsePortals game rule, which defaults to false. When true, entities with passengers can use nether portals, end portals, and end gateways.
24w21a1.21

Jukebox songs can now be data-driven, defined in the jukebox_song subdirectory. The definition has the following fields:

    sound_event - Sound event streamed when played from a Jukebox
    description - Name of the song displayed in the hover tooltip
    length_in_seconds - Length of the song in seconds as a positive float
    comparator_output - Redstone signal strength read from a comparator when played in a Jukebox, between 0 and 15

24w21a1.21

Added item component jukebox_playable, allowing the item to be inserted into a jukebox when present. It takes fields song (jukebox song id) and optionally show_in_tooltip (boolean).
24w21a1.21

Attribute modifiers no longer have a UUID and name combination, instead using a unique namespaced id.
24w21a1.21

The uuid and name arguments in the /attribute command have been replaced with a single id argument.
24w21a1.21

Entity attributes are now stored as attributes, with the following fields:

    id - Renamed from Name
    base - Renamed from Base
    modifiers - Renamed from Modifiers, and stores modifiers in the same format used in attribute_modifiers item stack components

24w21a1.21

Enchantment attribute effects have their name and uuid fields removed and replaced with a single id field, which is a namespaced attribute id.
24w21a1.21

The damage_item entity effect type no longer applies damage to items held by creative mode players.
24w21a1.21

The hit_block entity effect type has had its context changed to take a Hit Block Parameter, where this is the entity hitting the block.
24w21a1.21

Folders using plural names have been renamed to match their registry:

    structures → structure
    advancements → advancement
    recipes → recipe
    loot_tables → loot_table
    predicates → predicate
    item_modifiers → item_modifier
    functions → function
    tags/functions → tags/function

24w21a1.21

Removed item tag #music_discs.
24w21a1.21

Added block tag #air, containing all blocks resembling air.
24w21a1.21

Removed damage type tag #breeze_immune_to.
24w21a1.21

Added damage type tag #panic_environmental_causes, consisting of damage types that cause panic in aggresive animals.
24w21a1.21

Added damage type tag #panic_causes, consisting of damage types that cause panic in passive animals.
24w21a1.21

Added item sub-predicate jukebox_playable with field song to match the jukebox_playable item component, taking an id, list of ids, or tag.
24w21a1.21

The player sub-predicate gamemode now accepts a list of gamerules.
24w21a1.21

Added entity selector @n, which selects the nearest entity. It functions like e[sort=nearest,limit=1].
24w21a1.21

Added sound event block.vault.reject_rewarded_player.
24w21a1.21

Changed core shader definitions. Removed fields blend, position_color_tex, glint_direct, and armor_glint.
24w20a1.21

Data pack format has been increased to 44.
24w20a1.21

Changed the dimension_padding field in jigsaw structures to accept an object with fields bottom and top to individually define the vertical padding. The old format of a single integer is still valid, which will apply the same value to both top and bottom padding.
24w20a1.21

Changed the weight field in enchantments. It now has an upper bound of 1024.
24w20a1.21

Changed the max_level field in enchantments. It now has an upper bound of 255.
24w20a1.21

Added new movement_affected_by option to entity location predicates, adding requirements on blocks directly below the entity affecting its movement.
24w19a1.21

Data pack format has been increased to 43.
24w19a1.21

The custom_data item component can now be optionally specified as an SNBT string.
24w19a1.21

The food item component has a new using_converts_to, which is an item (with components) that the food item will be replaced with upon consumption.
24w19a1.21

Removed the power NBT tag and replaced it with the acceleration_power tag to control a projectile's acceleration and maximum speed. This affects dragon_fireball, large_fireball, small_fireball, fireball, breeze_wind_charge, wind_charge, and wither_skull entities.
24w19a1.21

Changed jigsaw structures. Added optional dimension_padding field, ensuring a structure does not generate through the edges of a dimension by the provided amount of vertical padding.
24w19a1.21

Added optional trigger_game_event field for the replace_block, replace_disc, and set_block_properties entity effect types, which is a game event id to trigger when a block is replaced.
24w19a1.21

Tag subdirectories using legacy plural names have been renamed to match their registry:

    tags/items → tags/item
    tags/blocks → tags/block
    tags/entity_types → tags/entity_type
    tags/fluids → tags/fluid
    tags/game_events → tags/game_event

24w19a1.21

Added block tag #fire_aspect_lightable, which contains all blocks lightable upon being hit by Fire Aspect enchanted tools.
24w19a1.21

Changed damage source predicates. Added optional is_direct boolean field, requiring damage to be direct when true.
24w18a1.21

Data pack format has been increased to 42.
24w18a1.21

Resource pack format has been increased to 33.
24w18a1.21

Removed feature flag update_1_21.
24w18a1.21

The item argument for /give, /item, and /loot now supports removal of default components with the ! prefix.
24w18a1.21

Enchantments are now data-driven.
24w18a1.21

Enchantments that show up in the game naturally are now defined with Enchantment Providers.
24w18a1.21

Enchantment exclusivity is now controlled via tags.
24w18a1.21

Painting variants are now loaded from data packs from the painting_variant folder. The definition is as follows:

    width - width of painting between 1 and 16
    height - height of painting between 1 and 16
    asset_id - id of sprite in the paintings atlas

24w18a1.21

Added damage type campfire, which campfires use instead of in_fire
24w18a1.21

Added enchantment functionality tags curse, prevents_bee_spawns_when_mining, prevents_decorated_pot_shattering, prevents_ice_melting, prevents_infested_spawns, and smelts_loot.
24w18a1.21

Added enchantment availability tags tradeable, on_traded_equipment, double_trade_price, in_enchanting_table, on_mob_spawn_equipment, and on_random_loot.
24w18a1.21

Added enchantment exlcusivity tags armor, boots, bow, crossbow, damage, mining, and riptide (found under the exclusive_set/ path).
24w18a1.21

Added damage tag burn_from_stepping, which represent burning damage from stepping on something - countered by the frost_walker enchantment.
24w18a1.21

Target entity names in some condition are renamed:

    killer is now attacker
    direct_killer is now direct_attacker
    killer_player is now attacking_player

24w18a1.21

Added condition enchantment_active_check, which checks for active enchantments if the "Enchantment Active" parameters exists in the loot context.
24w18a1.21

The random_chance condition is now a number provider.
24w18a1.21

The random_chance_with_looting condition is now renamed as random_chance_with_enchanted_bonus with the following field changes:

    looting_multiplier is removed
    chance is now a level-based value
    enchantment is added, containing the namespaced enchantment id

24w18a1.21

The enchanted_count_increase function is now renamed as enchanted_count_increase. There is a new field enchantment, which containers the namespaced enchantment id.
24w18a1.21

The enchant_randomly function has new formatting and fields.

    enchantments is replaced by options, which is either an enchantment, list of enchantments, or enchantment tag
    only_compatible is a new boolean field that only allows enchantments compatible with that item - defaults to true

24w18a1.21

The enchant_with_levels function has new formatting and removed fields.

    treasure has been removed
    options is a new field that is either an enchantment, list of enchantments, or enchantment tag

24w18a1.21

The copy_name function has its possible values for the source field changed: killer to attacking_entity, and killer_player to last_damage_player.
24w18a1.21

Added number provider enchantment_level. It has the field amount, which is alevel-based value based on the level of the enchantment.
24w18a1.21

The enchantment field has been removed and replaced with enchantments, which is either an enchantment, list of enchantments, or enchantment tag.
24w18a1.21

Added optional entity flag is_on_ground, which matches the "on ground" state of the entity.
24w18a1.21

Added optional entity flag is_flying, which matches whether the entity is flying, such as via creative or elytra.
24w18a1.21

Added optional location field can_see_sky, which matches exactly when the location has the maximum possible level of sky light.
24w18a1.21

Added optional location field weather, which matches one of clear, raining, or thunder in the location's dimension.
24w18a1.21

Added new entity sub-predicate movement, with these possible fields:

    x, y, and z - min/max limits for movement speed along the corresponding axes
    speed - min/max limits for overall movement speed
    horizontal_speed - min/max limits for horizontal movement speed
    vertical_speed - min/max limits for vertical movement speed
    fall_distance - min/max limits for fall distance of entity, measured in blocks
    (all speeds are measured in blocks per second)

24w18a1.21

Added new entity sub-predicate periodic_ticks, which is true every n (positive integer) ticks of the entity's lifetime.
24w18a1.21

Attribute generic.attack_knockback now works on players.
24w18a1.21

Added attribute generic.burning_time, which is a factor to how long an entity remains on fire after being ignited. Values can be between 0 and 1024, with a default of 1.
24w18a1.21

Added attribute generic.explosion_knockback_resistance, which is a factor to how much knockback an entity takes from an explosion. Values can be between 0 and 1, with a default of 0. A value of 1 completely reduces the knockback, whilst 0 provides no knockback reduction.
24w18a1.21

Added attribute player.mining_efficiency, which is a factor added to the mining speed while using the correct tool for a block. Values can be between 0 and 1024, with a default of 0.
24w18a1.21

Added attribute generic.movement_efficiency, which controls how efficiently an entity moves through slowing/impeding terrain (such as a cobweb). Values can be between 0 and 1, with a default of 0. A value of 1 completely removes the movement penalty, whilst 0 provides no reduction to the penalty.
24w18a1.21

Added attribute generic.oxygen_bonus, which is a value used in the equation to determine the chance an entity will not use up oxygen whilst underwater. Values can be between 0 and 1024, with a default of 0. If the value is above 0, this equation is used: 1 / (oxygen_bonus + 1).
24w18a1.21

Added attribute player.sneaking_speed, which is a movement speed factor while a player is sneaking. Values can be between 0 and 1, with a default of 0.3. A value of 1 means sneaking is as fast as walking, whilst 0 prevents movement whilst sneaking.
24w18a1.21

Added attribute player.submerged_mining_speed, which is a mining speed factor while a player is submerged. Values can be between 0 and 20, with a default of 0.2. A value of 1 means mining submerged is as fast as mining on land, whilst 0 prevents mining whilst submerged.
24w18a1.21

Added attribute player.sweeping_damage_ratio, which controls how much of the base attack damage gets transferred to secondary targets hit by a sweep attack. Values can be between 0 and 1, with a default of 0. A value of 1 means all of the base damage is transferred, whilst 0 prevents any damage from being transferred.
24w18a1.21

Added attribute generic.water_movement_efficiency, which controls how efficiently an entity moves when submerged. Values can be between 0 and 1, with a default of 0.
24w18a1.21

Added block predicate unobstructed, which tests if the selected block has no entities within the space of the block. It has the field offset, which is a list of three int offset coordinates, defaulting to [0, 0, 0].
24w18a1.21

The ShotFromCrossbow field has been removed from arrow-like projectile data, and is replaced with a weapon field containing an item stack representing the weapon the projectile was shot from.
1.20.5-rc11.20.5

To ease the transition period, modded servers can now opt-out of the client disconnecting on invalid data by setting the appropriate field in the handshake/game_profile packet.
1.20.5-pre41.20.5

Resource pack format has been increased to 32.
1.20.5-pre41.20.5

The shift field in ttf glyph providers is now restricted between -512 and 512.
1.20.5-pre31.20.5

Data pack format has been increased to 41.
1.20.5-pre31.20.5

Replaced entity type tag punchable_projectiles with redirectable_projectile for projectiles which can be redirected by player attacks and projectiles.
1.20.5-pre21.20.5

Data pack format has been increased to 40.
1.20.5-pre21.20.5

Snip it! advancement has been renamed to Shear Brilliance.
1.20.5-pre21.20.5

Using ctrl+pick block no longer lists "(+NBT)" in the item tooltip.
1.20.5-pre21.20.5

The animated nether portal texture is now displayed when changing dimension to or from the nether.
1.20.5-pre21.20.5

The animated end portal effect is now displayed when changing dimension to or from the end.
1.20.5-pre21.20.5

Invalid data in packets sent from a server will now cause the game client to disconnect.
1.20.5-pre21.20.5

Changed the set_fireworks function. Fields explosions and mode have been grouped together as a sub-object explosions field fields values, mode, and mode-dependent fields.
1.20.5-pre11.20.5

Data pack format has been increased to 39.
1.20.5-pre11.20.5

Added new language Viossa. It has code vp_vl.
1.20.5-pre11.20.5

Changed the /particle command syntax for particles with extra options:

    block redstone_lamp[lit=true] → block{block_state:{Name:"redstone_lamp",Properties:{lit:"true"}}} (also for block_marker, falling_dust, and dust_pillar)
    dust 0.1 0.2 0.3 0.4 → dust{color:[0.1,0.2,0.3],scale:0.4}
    dust_color_transition 0.1 0.2 0.3 0.4 0.5 0.6 0.7 → dust_color_transition{from_color:[0.1,0.2,0.3],scale:0.4,to_color:[0.5,0.6,0.7]}
    entity_effect → entity_effect{color:[0.1,0.2,0.3,0.4]}
    item diamond → item{item:"diamond"}
    sculk_charge 0.1 → sculk_charge{roll:0.1}
    shriek 1 → shriek{delay:1}
    vibration 0.1 0.2 0.3 4 → vibration{destination:{type:"block",pos:[0.1,0.2,0.3]},arrival_in_ticks:4}

1.20.5-pre11.20.5

Changed the Particle field of area effect clouds to match worldgen and command format. For example {Particle:{type:"block",block_state:"diamond_block"}}.
1.20.5-pre11.20.5

Removed spawn data field equipment_loot_table, and replaced it with equipment, which has fields loot_table (same as the old field), and slot_drop_chances (optional list of floats, or single float).
1.20.5-pre11.20.5

The combination of max_stack_size and max_damage is no longer allowed.
1.20.5-pre11.20.5

The page limit in written books has been removed. Note that the 100 page limit still exists for writable books and in survival.
1.20.5-pre11.20.5

Changed the food component. Replaced field saturation_modifier → saturation, which is now defines as nutrition * saturation_modifier * 2.
1.20.5-pre11.20.5

Changed the set_contents function. Removed field type and added field component, which can be one of container, bundle_contents, or charged_projectiles.
1.20.5-pre11.20.5

Changed the set_custom_data function. The tag field now also allows unflattened objects.
1.20.5-pre11.20.5

Added function modify_contents, which applies an item modifier to items inside a component. It has fields component (one of container, bundle_contents, or charged_projectiles), and modifier (loot function or list).
1.20.5-pre11.20.5

Added function set_item. It has a single field item, which is a resource location.
1.20.5-pre11.20.5

Added function filtered, which applies an item modifier only when the current item matches an item predicate. It has fields item_filter (item predicate), and modifier (loot function or list).
1.20.5-pre11.20.5

Added function set_custom_model_data. It has a single field value, which is a number provider.
1.20.5-pre11.20.5

Added new field body in equipment entity sub predicate.
1.20.5-pre11.20.5

Added collection matchers, which are used in predicates. It is an object with optional fields: size (int bounds), contains (list of element predicates), and count (object with fields test and count).
1.20.5-pre11.20.5

Added item sub predicate container. It has a single optional field items, which is a collection matcher of item predicates. Empty slots will be ignored.
1.20.5-pre11.20.5

Added item sub predicate bundle_contents. It has a single optional field items, which is a collection matcher of item predicates.
1.20.5-pre11.20.5

Added item sub predicate firework_explosion. It has optional fields shape (string), has_trail (boolean), and has_twinkle (boolean).
1.20.5-pre11.20.5

Added item sub predicate fireworks. It has optional fields explosions (collection matcher of firework explosions), and flight_duration.
1.20.5-pre11.20.5

Added item sub predicate writable_book_content. It has a single optional field pages, which is a collection matcher of strings.
1.20.5-pre11.20.5

Added item sub predicate written_book_content. It has a optional fields pages (collection matcher of text components), author (string), title (string), generation (int bounds), and resolved (boolean).
1.20.5-pre11.20.5

Added item sub predicate attribute_modifiers. It has a single optional field modifiers, which is a collection matcher of modifier predicates.
1.20.5-pre11.20.5

Added item sub predicate trim. It has optional fields material and pattern, both an entry, list of entries, or tag.
1.20.5-pre11.20.5

Added new terrain adaptation encapsulate.
1.20.5-pre11.20.5

Removed item tag tools.
1.20.5-pre11.20.5

Added entity type tag punchable_projectiles, for projectiles that the player can deflect.
1.20.5-pre11.20.5

Added enchantment tag tooltip_order controlling the order of enchantments in item tooltips.
24w14a1.20.5

Data pack format has been increased to 38.
24w14a1.20.5

The game now requires Java 21 and a 64-bit operating system.
24w14a1.20.5

Changed function set_attributes. Added optional field replace (boolean), which defaults to true.
24w14a1.20.5

The text field in filterable has been renamed to raw to avoid ambiguity. Note this is not the same text field in text components.
24w14a1.20.5

The profile component and field on items and blocks now supports resolving by UUID, when the id field is specified, but name is not.
24w13a1.20.5

Data pack format has been increased to 37.
24w13a1.20.5

Resource pack format has been increased to 31.
24w13a1.20.5

The chat_command_signed packet has been split from chat_command.
24w13a1.20.5

The server can now clear chat state by sending a reset_chat packet in configuration phase.
24w13a1.20.5

Added loot table type equipment. It has required parameters this_entity, and origin.
24w13a1.20.5

Changed spawn data NBT, used in SpawnPotentials and spawn_potentials. Added an optional field equipment_loot_table.
24w13a1.20.5

Non-default components on item stacks are now copied to block entities when placed in a field components. Note that breaking the block does not automatically copy the components to the drops.
24w13a1.20.5

Added component item_name, which is a stringified text component.
24w13a1.20.5

Added component ominous_bottle_amplifier, which is an integer between 0 and 4.
24w13a1.20.5

Replaced field components with two fields: include and exclude, both optional lists of component types.
24w13a1.20.5

Changed function set_name. Added optional field target, which can be one of custom_name or item_name.
24w13a1.20.5

Added function set_ominous_bottle_amplifier. It has a field amplifier, which is a number provider that will set the ominous_bottle_amplifier component.
24w13a1.20.5

Added entity sub predicate raider. It has two optional boolean fields: has_raid, and is_captain.
24w13a1.20.5

Added particle types infested, item_cobweb, small_gust, raid_omen, trial_omen, trial_spawner_detection_ominous, and ominous_spawning.
24w13a1.20.5

Int and float providers no longer wrap fields in an extra value object.
24w13a1.20.5

Added damage type tag is_player_attack, for attacks performed by a player.
24w13a1.20.5

Added entity type tags immune_to_oozing, and immune_to_infested.
24w12a1.20.5

Data pack format has been increased to 36.
24w12a1.20.5

Resource pack format has been increased to 30.
24w12a1.20.5

Added trigger crafter_recipe_crafted, which has conditions recipe_id (resource location), and ingredients (list of item predicates).
24w12a1.20.5

Added trigger fall_after_explosion, which has conditions start_position (location predicate), distance (distance predicate), and cause (entity predicate).
24w12a1.20.5

Added number provider storage. It has fields storage (resource location), and path (nbt path).
24w12a1.20.5

Changed function set_lore. Replaced the field replace with mode, which is a list operation.
24w12a1.20.5

Changed function set_written_book_pages. The pages field now contains filterable text components, without being stringified.
24w12a1.20.5

Added function toggle_tooltips. It has a field toggles, which is an object with optional boolean fields: trim, dyed_color, enchantments, stored_enchantments, unbreakable, can_break, can_place_on, and attribute_modifiers.
24w12a1.20.5

Nested lists are no longer supported in loot function lists.
24w12a1.20.5

Expanded the item predicate syntax, used in /execute if items and /clear:

    * can be used to match any item
    [damage] can be used to check if a component exists
    [predicate~value] can be used to check item sub predicates (not available for all components)
    [count=4] is a special case for matching the item stack count
    [!count=1], [!damage] any entry can be negated by prepending a !
    [!damage|damage=0] tests can be joined with | to match alternatives
    removed the special behavior for custom data: item{a:2} → item[custom_data~{a:2}]

24w12a1.20.5

The custom_data item sub predicate now accepts both an unflattened object and a stringified tag.
24w12a1.20.5

Added a wolf entity sub predicate. It has a single field variant, which allows a single entry, list of entries, or tag.
24w12a1.20.5

Changed the cat, frog, and painting predicates. Their variant fied now allows a single entry, list of entries, or tag.
24w12a1.20.5

Added component food, which makes the item consumable. It has fields nutrition (integer), saturation_modifier (float), can_always_eat (optional boolean), eat_seconds (optional float), and effects (optional list of effects).
24w12a1.20.5

Added component max_stack_size, which is an integer between 1 and 99.
24w12a1.20.5

Added component max_damage, which is a positive integer. If not present, the item cannot be damaged.
24w12a1.20.5

Added component fire_resistant, which accepts an empty object.
24w12a1.20.5

Added component rarity, which determines the color of the item name. It can be one of common, uncommon, rare, or epic.
24w12a1.20.5

Added component tool. It has fields default_mining_speed (optional float), damage_per_block (optional integer), and rules. Rules is an object with fields blocks (entries or block tag), speed (optional float), and correct_for_drops (optional boolean).
24w12a1.20.5

Added component hide_tooltip, which accepts an empty object. When present, completely hides the tooltip when hovered over.
24w12a1.20.5

Added block tags incorrect_for_wooden_tool, incorrect_for_gold_tool, incorrect_for_stone_tool, incorrect_for_iron_tool, incorrect_for_diamond_tool, and incorrect_for_netherite_tool. They combine the existing needs_*_tool tags for each tier.
24w12a1.20.5

Added entity type tag sensitive_to_smite.
24w12a1.20.5

Added item tags meat, piglin_food, fox_food, cow_food, goat_food, sheep_food, wolf_food, cat_food, horse_food, horse_tempt_items, camel_food, armadillo_food, bee_food, chicken_food, frog_food, hoglin_food, llama_food, llama_tempt_items, ocelot_food, panda_food, pig_food, rabbit_food, strider_food, strider_tempt_items, turtle_food, parrot_food, parrot_poisonous_food.
24w12a1.20.5

Renamed item tag axolotl_tempt_items → axolotl_food.
24w12a1.20.5

Map decoration icons have been split from map_icons.png to use an atlas loaded from textures/map/decorations. Added the trial_chambers map decoration.
24w11a1.20.5

Data pack format has been increased to 35.
24w11a1.20.5

Resource pack format has been increased to 29.
24w11a1.20.5

Removed the any entity sub predicate in type_specific.
24w11a1.20.5

Added slot name contents for entities like items, item frames, and item displays.
24w11a1.20.5

Changed item predicates. Replaced some fields with item sub predicates, which is a map in field predicates:

    durability → damage sub predicate, with two fields: damage and durability
    enchantments → enchantments sub predicate
    stored_enchantments → stored_enchantments sub predicate
    potions → potion_contents sub predicate
    custom_data → custom_data sub predicate

24w11a1.20.5

Added function set_fireworks, which has fields flight_duration (optional int), and explosions (optional list of explosions), and mode (list operation).
24w11a1.20.5

Added function set_firework_explosion, which has optional fields shape (string), colors (list of integers), fade_colors (list of integers), trail (boolean), and twinkle (boolean).
24w11a1.20.5

Added function set_book_cover, which has optional fields title (filterable string), author (string), generation (integer).
24w11a1.20.5

Added function set_writable_book_pages, which has fields page (list of filterable strings), and mode (list operation).
24w11a1.20.5

Added function set_written_book_pages, which has fields page (list of filterable strings containing text components), and mode (list operation).
24w11a1.20.5

Added list operations, which are used in some loot functions. They have a field mode:

    append: no additional fields
    insert: with optional field offset (integer)
    replace_all: no additional fields
    replace_section: with optional fields offset (integer) and size (integer)

24w11a1.20.5

Renamed post processing shader blur → box_blur. Added new entity_outline_box_blur shader.
24w11a1.20.5

Changed post processing passes. Added optional field use_linear_filter (boolean). When set to true, switches texture sampling mode from nearest-neighbor sampling to linear interpolation for that pass.
24w10a1.20.5

Data pack format has been increased to 34.
24w10a1.20.5

Changed recipe types crafting_shaped, crafting_shapeless, stonecutting, and smithing_transform. They now accept a components field in the result item stack, which is a component patch map.
24w10a1.20.5

Changed recipe types smelting, blasting, smoking, and campfire_cooking. The result field is now an object with fields id (item resource location) and components (component patch map).
24w10a1.20.5

Changed entity predicates. Added field slots, which is a map of slot names to item predicates.
24w10a1.20.5

Added slot names player.cursor, and player.crafting.0 - player.crafting.3.
24w10a1.20.5

Slot names in the /item command and in the slots field in entity predicates now also allow slot ranges. Possible slot ranges are: container.*, hotbar.*, inventory.*, enderchest.*, villager.*, horse.*, weapon.*, armor.*, player.crafting.*.
24w10a1.20.5

Added /execute if items command, with syntax:

    /execute if|unless items <source> <slots> <item_predicate>

24w10a1.20.5

Added banner patterns, which are stored in the banner_pattern data pack folder. It has two fields: asset_id (namespaced string), and translation_key (string).
24w10a1.20.5

Changed the profile component. The name field is now optional. Added a shorthand: it can be defined as a string playername.
24w10a1.20.5

Added some alternative shorthands to components:

    profile can now also be a player name string
    dyed_color can now also be an integer rgb
    attribute_modifiers can now also be a list of modifiers
    potion_contents can now also be a single potion string
    enchantments and stored_enchantments can now also be a map of enchantment to level

24w10a1.20.5

All container blocks now use the container component in item form, not just shulker boxes.
24w10a1.20.5

Renamed the component lodestone_target → lodestone_tracker. Changed its field, it now has a single field: target, which is an optional object containing pos and dimension.
24w10a1.20.5

Changed the lore and fireworks components. The maximum number of lore and firework entries has been increased to 256.
24w10a1.20.5

Added wolf variants, which are stored in the wolf_variant data pack folder. It has fields biomes (list of biomes or tag), texture, tame_texture, and angry_texture (resource locations ending with .png).
24w09a1.20.5

Data pack format has been increased to 33.
24w09a1.20.5

Resource pack format has been increased to 28 (skipping 27).
24w09a1.20.5

Unstructured NBT tags on items tags (tag field) has been replaced with structured components. This impacts /give, /clear, and commands using item NBT. For example: iron_axe{Damage:10,foo:"bar"} → iron_axe[minecraft:damage=10]{foo:"bar"}.

    Damage:12 → damage=12
    RepairCost:12 → repair_cost=12
    Unbreakable:1b → unbreakable={}
    Enchantments:[{id:"sharpness",lvl:2}] → enchantments={levels:{sharpness:2}}
    StoredEnchantments → stored_enchantments
    display:{Name:'"hello"'} → custom_name='"hello"'
    display:{Lore:['"hello"']} → lore=['"hello"']
    CanDestroy:["stone"] → can_break={blocks:"stone"}
    CanPlaceOn:["stone"] → can_place_on={blocks:"stone"}
    display:{color:16711680} → dyed_color={rgb:16711680}
    AttributeModifiers:[] → attribute_modifiers={modifiers=[]}
    Charged:1b,ChargedProjectiles:[{id:"arrow"}] → charged_projectiles=[{id:"arrow"}]
    Items:[] (bundle) → bundle_contents=[]
    display:{MapColor:16711680} → map_color=16711680
    Decorations:[] (filled map) → map_decorations={}
    map:1 → map=1
    CustomModelData → custom_model_data
    Potion:"invisibility",CustomPotionColor:16711680,custom_potion_effects:[] → potion_contents={potion:"invisibility",custom_color:16711680,custom_effects:[]}
    pages:["hello"] (book and quill) → writable_book_content={pages:["hello"]}
    pages:['"hello"'],title:"Title",author:"Misode",generation:1,resolved:1b (written book) → written_book_content={pages:['"hello"'],title:"Title",author:"Misode",generation:1,resolved:true}
    Trim={...} → trim={...}
    effects:[] (suspicious stew) → suspicious_stew=[]
    HideFlags → split to the different components as well as hide_additional_tooltip component
    DebugProperty → debug_stick_state
    EntityTag:{...} → entity_data={...}
    bucketed mobs data → bucket_entity_data={...}
    instrument:"ponder_goat_horn" → instrument="ponder_goat_horn"
    Recipes:[] (knowledge book) → recipes=[]
    LodestonePos, LodestoneDimension, and LodestoneTracked → lodestone_target={pos:[13,64,-43],dimension:"the_nether"}
    Explosion (firework star) → firework_exlosion={}
    Fireworks:{Explosions:[],Flight:1} (firework rocket) → fireworks={explosions:[],flight_duration:1}
    SkullOwner:{Name:"Steve"} → profile={name:"Steve"}
    BlockEntityTag:{note_block_sound:"ambient.cave"} → note_block_sound="ambient.cave"
    BlockEntityTag:{Base:2} → base_color="magenta"
    BlockEntityTag:{Patterns:[]} → banner_patterns=[]
    BlockEntityTag:{sherds:[]} → pot_decorations=[]
    BlockEntityTag:{Items:[]} (shulker box) → container=[]
    BlockEntityTag:{Bees:[]} → bees=[]
    BlockEntityTag:{Lock:"test"} → lock="test"
    BlockEntityTag:{LootTable:"foo",LootTableSeed:123} → container_loot={loot_table:"foo",seed:123}
    BlockEntityTag:{...} → block_entity_data={...}
    BlockStateTag:{...} → block_state={...}

24w09a1.20.5

Added data component enchantment_glint_override (boolean), which can be used to add or remove the enchantment glint.
24w09a1.20.5

The format of serialized item stacks has been changed to support components:

    Renamed Count → count. The count now defaults to 1 and will not be present in that case.
    Removed tag and replaced with components which is a key-value map.

24w09a1.20.5

Removed the ignoreTags field on villager trades. Instead trades can now list item component predicates.
24w09a1.20.5

Tipped arrows no longer store their effects in Potion or custom_potion_effects. Instead this information is fetched from the item tag.
24w09a1.20.5

Renamed area effect cloud fields to match the potion_contents component:

    Potion → potion_contents.potion
    Color → potion_contents.custom_color
    effects → potion_contents.custom_effects

24w09a1.20.5

Changed banner block entity fields to match the banner_patterns component:

    Patterns[].Pattern (short string) → patterns[].pattern (namespaced ID)
    Patterns[].Color (integer) → patterns[].color (dye string)

24w09a1.20.5

Changed beehive block entity fields to match the bees component:

    Bees[].EntityData → bees[].entity_data
    Bees[].TicksInHive → bees[].ticks_in_hive
    Bees[].MinOccupationTicks → bees[].min_ticks_in_hive
    FlowerPos → flower_pos

24w09a1.20.5

Changed loot table entry loot_table. The name field has been replaced with value and it now also allows inline loot tables.
24w09a1.20.5

Changed item predicates:

    Removed the tag field. Instead items now also supports a single entry, and a hash-prefixed item tag
    Renamed potion → potions, supporting a single entry, hash-prefixed potion tag
    Renamed nbt → custom_data
    Added optional field components, which matches exact components

24w09a1.20.5

Changed block predicates:

    Removed the tag field. Instead blocks now also supports a single entry, and a hash-prefixed block tag

24w09a1.20.5

Changed fluid predicates:

    Renamed fluid → fluids, and now also supports a single entry, and a hash-prefixed fluid tag

24w09a1.20.5

Changed entity predicates:

    type now also supports a hash-prefixed entity type tag, and a list of entity types

24w09a1.20.5

Changed location predicates:

    Renamed biome → biomes, and now also supports a hash-prefixed biome tag, and a list of biomes
    Renamed structure → structures, and now also supports a hash-prefixed structure tag, and a list of structures

24w09a1.20.5

Added function set_components which can add, replace, or remove components. It has a single field components which is a map. Component keys can be prefixed with ! to remove the component.
24w09a1.20.5

Added function copy_components which can copy components from a specified source. It has fields source (currently only block_entity) and components (list of component IDs).
24w09a1.20.5

Renamed function set_nbt → set_custom_data and copy_nbt → copy_custom_data. Vanilla data cannot be specified with this, instead use set_components and copy_components.
24w09a1.20.5

Changed the set_attributes loot function. The slot field now also accepts any, armor, and hand. Renamed the operation options:

    addition → add_value
    multiply_base → add_multiplied_base
    multiply_total → add_multiplied_total

24w09a1.20.5

Changed the /attribute command. Renamed the operation literals:

    add → add_value
    multiply_base → add_multiplied_base
    multiply → add_multiplied_total

24w09a1.20.5

Changed the /playsound command. The mixer (default master) and player (default @s) arguments are now optional.
24w09a1.20.5

Projectile weapon enchantments like infinity, multishot and piercing now work on both crossbows and bows, if placed onto the alternative weapon using data manipulation or a change to the enchantable/* tags.
24w09a1.20.5

Default item components are now exported to reports/items.json using the data generator.
24w09a1.20.5

Added damage type tag bypasses_wolf_armor for damage sources that can not be absorbed by wolf armor
24w09a1.20.5

Added textures to support the colored layer of wolf armor and the cracks: entity/wolf/wolf_armor_overlay, item/wolf_armor_overlay, entity/wolf/wolf_armor_crackiness_low, entity/wolf/wolf_armor_crackiness_medium, and entity/wolf/wolf_armor_crackiness_high.
24w09a1.20.5

Removed the options_background and light_dirt_background textures. Instead menu_background and menu_list_background textures are used.
24w07a1.20.5

Data pack format has been increased to 32.
24w07a1.20.5

The /place jigsaw command now allows max depth values up to 20.
24w07a1.20.5

Added block tag does_not_block_hoppers for blocks that will never disable a hopper when placed above one.
24w07a1.20.5

Added loot table gameplay/panda_sneeze for drops when pandas sneeze.
24w06a1.20.5

Data pack format has been increased to 31.
24w06a1.20.5

Resource pack format has been increased to 26.
24w06a1.20.5

Effect amplifiers are restricted between 0 and 255 again.
24w06a1.20.5

The former behavior of effects such as Jump Boost, Levitation, and Mining Fatigue over 127 has, also known as "negative effects" been removed.
24w06a1.20.5

The maximum length of a command in a function is now 2000000 (2 million) characters.
24w06a1.20.5

Added new attributes:

    generic.gravity, between -1.0 and 1.0, defaults to 0.08
    generic.jump_strength, between 0.0 and 32.0, defaults to 0.42
    generic.safe_fall_distance, between -1024.0 and 1024.0, defaults to 3.0
    generic.fall_damage_multiplier, between 0.0 and 100.0, defaults to 1.0
    player.block_break_speed, between 0.0 and 1024.0, defaults to 1.0

24w06a1.20.5

Removed horse.jump_strength attribute and replaced it with generic.jump_strength.
24w06a1.20.5

Added two events to the /jfr command: ChunkRegionRead and ChunkRegionWrite.
24w06a1.20.5

Added new entity type breeze_wind_charge.
24w06a1.20.5

Changed how block positions are stored and renamed NBT fields in some places. Instead of {X:1,Y:2,Z:3}, the format is now [I;1,2,3]:

    Bees: FlowerPos and HivePos → flower_pos and hive_pos
    Beehives: FlowerPos → flower_pos
    End crystals: BeamTarget → beam_target
    Leashable entities: Leash → leash
    Patrolling mobs: PatrolTarget → patrol_target
    End gateways: ExitPortal → exit_portal
    Wandering traders: WanderTarget → wander_target

24w06a1.20.5

Removed particle type gust_emitter. Added gust_emitter_large and gust_emitter_small.
24w06a1.20.5

Added block tag badlands_terracotta, which is used by the armadillo_spawnable_on tag.
24w06a1.20.5

Added block tag blocks_wind_charge_explosions for blocks not impacted by the explosion when hit by wind charges. It contains barrier and bedrock by default.
24w06a1.20.5

Added font variant filters to font providers. Added a new field filters to all glyph providers, which is a map of variants to booleans. Current variants are uniform (Force Unicode Font) and jp (Japanese Glyph Variants).
24w05b1.20.5

Effect amplifiers above 127 are no longer possible. Changed the /effect command: the amplifier argument is now limited to values between 0 and 127.
24w05a1.20.5

Data pack format has been increased to 30.
24w05a1.20.5

Resource pack format has been increased to 25.
24w05a1.20.5

Added entity type tag no_anger_from_wind_charge.
24w05a1.20.5

Added item tag dyeable.
24w05a1.20.5

Added particle type vault_connection.
24w05a1.20.5

Added a third possible value for the region-file-compression option in server.properties: none.
24w04a1.20.5

Data pack format has been increased to 29.
24w04a1.20.5

Added the /transfer command to transfer players to another server. It has syntax /transfer <hostname> [<port>] [<players>].
24w04a1.20.5

The chunk compression mode can be configured with the region-file-compression option in server.properties. Possible values: deflate (default) and lz4.
24w04a1.20.5

Added startup flag recreateRegionFiles, which will optimize and rewrite all the region files.
24w03b1.20.5

Removed particle type gust_dust.
24w03a1.20.5

Data pack format has been increased to 28.
24w03a1.20.5

Resource pack format has been increased to 24.
24w03a1.20.5

Added game rule spawnChunkRadius which controls the size of the spawn chunks. It allows values between 0 and 32, with a default of 2. Setting it to 0 completely disables spawn chunks.
24w03a1.20.5

Renamed enchantment sweeping → sweeping_edge.
24w03a1.20.5

Added advancement triggers any_block_use and default_block_use.
24w03a1.20.5

Renamed attributes generic.block_interaction_range → player.block_interaction_range and generic.entity_interaction_range → player.entity_interaction_range.
24w03a1.20.5

Custom Villager trades can be configured to accept items that have different tags from the expected item by adding ignoreTags:1b.
24w03a1.20.5

Removed entity type tag deflects_arrows and deflects_tridents. Added entity type tag deflects_projectiles.
24w03a1.20.5

Added entity type tags aquatic, arthropod, ignores_poison_and_regen, illager, illager_friends, inverted_healing_and_harm, not_scary_for_pufferfish, sensitive_to_bane_of_arthropods, sensitive_to_impaling, and wither_friends.
24w03a1.20.5

Added item tags chest_armor, foot_armor, head_armor, leg_armor, and skulls.
24w03a1.20.5

Added item tags enchantable/armor, enchantable/bow, enchantable/chest_armor, enchantable/crossbow, enchantable/durability, enchantable/equippable, enchantable/fishing, enchantable/foot_armor, enchantable/head_armor, enchantable/leg_armor, enchantable/mining, enchantable/mining_loot, enchantable/sword, enchantable/trident, enchantable/vanishing, and enchantable/weapon.
24w03a1.20.5

Changed the ttf font provider to have more reasonable defaults.
24w03a1.20.5

Added transfer and cookie packets.
23w51a1.20.5

Data pack format has been increased to 27.
23w51a1.20.5

Added attributes generic.block_interaction_range and generic.entity_interaction_range for controlling the player's interaction range. Values can between 0 and 64.
23w51a1.20.5

Added attribute generic.scale for controlling the entity scale. Values can be between 0.0625 and 16, with a default of 1.
23w51a1.20.5

Added attribute generic.step_height, which controls the maximum number of blocks that an entity can step up without jumping. Values can be between 0 and 10, with a default of 0.6.
23w51a1.20.5

Added damage type spit, which llamas now use instead of mob_projectile.
23w51a1.20.5

Added damage type wind_charge.
23w51a1.20.5

Added damage type tag always_kills_armor_stands
23w51a1.20.5

Added memory module types danger_detected_recently and breeze_leaving_water.
23w51a1.20.5

Removed field FactorCalculationData from effect NBT.
1.20.3-pre31.20.3

Only 20 server resource packs are now cached in the downloads directory.
1.20.3-pre31.20.3

Clients now send additional updates about packs (like download success).
1.20.3-pre11.20.3

Data pack format has been increased to 26.
1.20.3-pre11.20.3

Resource pack format has been increased to 22.
1.20.3-pre11.20.3

Renamed minecraft:grass block and item to minecraft:short_grass.
1.20.3-pre11.20.3

Downloaded resource packs are now stored in downloads directory. Files are no longer automatically deleted (previously only up 10 packs were kept). There is a log.json file in the folder for debug purposes.
1.20.3-pre11.20.3

Downloaded resource packs now have a unique ID to differentiate them. It can be configured with the resource-pack-id option in server.properties. If not provided, will be generated based on the URL.
1.20.3-pre11.20.3

Clients can now accept multiple server resource packs. Added packet to un-apply server resource packs. Resource packs are no longer cleaned when entering configuration phase.
23w46a1.20.3

Data pack format has been increased to 25.
23w46a1.20.3

Added new subcommand to /scoreboard to add individual display names for entries, with syntax:

    scoreboard players display name <targets> <objective> <text component>: Adds display name
    scoreboard players display name <targets> <objective>: Clears display name

23w46a1.20.3

Added new subcommand to /scoreboard to auto-show entity names on the sidebar, with syntax:

    scoreboard objectives modify <scoreboard> displayautoupdate [true|false]

23w46a1.20.3

Added new subcommand to /scoreboard to control number formatting of scores using a style. The style can be either blank, fixed <text component>, or styled <style>. It has syntax:

    scoreboard objectives modify <objective> numberformat <format>: Sets the default number format for an objective
    scoreboard objectives modify <objective> numberformat: Clears the default number format
    scoreboard players display numberformat <targets> <score> <format>: Sets the number format for a specific score holder
    scoreboard players display numberformat <targets> <score>: Clears the number format

23w45a1.20.3

Data pack format has been increased to 24.
23w45a1.20.3

Resource pack format has been increased to 21.
23w45a1.20.3

Changed jigsaw structure. Increased maximum value of field size from 7 to 20.
23w45a1.20.3

The uniform font has been updated to Unifont 15.1.04 (from 15.0.06).
23w45a1.20.3

The only supported texture format is now .png.
23w44a1.20.3

Data pack format has been increased to 23.
23w44a1.20.3

Changed behavior of /return run. It will now always return, even if the called function does not return.
23w44a1.20.3

Added subcommand /return fail that returns with a success of 0 and a result of 0.
23w44a1.20.3

Changed behavior of /return run function. When calling a function tag, execution will stop after the first return in any of the functions.
23w44a1.20.3

Changed behavior of /execute if|unless function. If the called functions dit not return, unless will now pass. For a single context, the first return in any of the functions will return.
23w44a1.20.3

Added tags LootTable and LootTableSeed to block entity decorated_pot.
23w43a1.20.3

Data pack format has been increased to 22.
23w43a1.20.3

Resource pack format has been increased to 20.
23w43a1.20.3

Renamed field Trident → item on the trident entity.
23w43a1.20.3

Added field item on the arrow and spectral arrow entities. It is the item that will be picked up.
23w43a1.20.3

Added input fields Selection Priority and Placement Priority to the jigsaw block edit screen.
23w42a1.20.3

Data pack format has been increased to 21.
23w42a1.20.3

Resource pack format has been increased to 19.
23w42a1.20.3

Changed the tnt entity NBT. Renamed field Fuse → fuse and added field block_state.
23w42a1.20.3

Added feature flag update_1_21.
23w42a1.20.3

Added game rules playersNetherPortalDefaultDelay, playersNetherPortalCreativeDelay, and projectilesCanBreakBlocks.
23w42a1.20.3

Added particle type white_smoke.
23w42a1.20.3

Changed structures. Added an optional field pool_aliases, which is a list of alias objects and can be used to rewire template pool connections. Each alias object has a type, which can be one of:

    direct: one mapping, has fields alias (pool reference) and target (pool reference)
    random: selects one random mapping, has fields alias (pool reference) and targets (weighted list of pool references)
    random_group: selects one group of mappings, has field groups (weighted list of list of aliases)

23w41a1.20.3

Data pack format has been increased to 20.
23w41a1.20.3

Non-living entities with a CustomName will now show their name when looked at, or always if CustomNameVisible is set.
23w41a1.20.3

Added boolean tag dangerous to entity wither_skull. It determines whether it is a blue skull.
23w41a1.20.3

Added tag item to block entity decorated_pot, which is an item stack.
23w41a1.20.3

The /function command no longer has a result unless it uses /return, it will no longer return the number of commands executed.
23w41a1.20.3

The maxCommandChainLength game rule now counts operations more strictly.
23w41a1.20.3

Added game rule maxCommandForkCount, which restricts the total amount of contexts that can be created by commands like /execute as @e.
23w41a1.20.3

Reintroduced the /execute if function subcommand, with syntax:

    execute if|unless function <function> <continuation>: executes a function (tag) and matches if the return value is not 0.

23w41a1.20.3

Reintroduced the /return run subcommand, with syntax:

    return run <command>: takes the return value from the command and returns it as the return value of the function. Does not return if the command was a function and that function did not return. Returns 0 if the command failed.

23w41a1.20.3

Added particle type dust_plume.
23w40a1.20.3

Data pack format has been increased to 19.
23w40a1.20.3

Plain-text text components are now always serialized as strings instead of {"text": "blah"}
23w40a1.20.3

text components now serialize to NBT when sent over network.
23w40a1.20.3

Added optional field type to text components. One of text, translatable, score, selector, nbt, and keybind.
23w40a1.20.3

In text components, the id field for show_entity hoverEvent style accepts UUID as an array of four ints.
23w40a1.20.3

Numeric and boolean text components are no longer converted to a string. Additionaly, null and [] are no longer accepted.
23w40a1.20.3

Errors in following text component style fields are no longer silently ignored:

    color
    clickEvent
    hoverEvent
    hoverEvent[action=show_entity].contents.name
    hoverEvent[action=show_item].contents.tag

23w40a1.20.3

Added damage tag can_break_armor_stands, which can incrementally knock down armor stands.
23w40a1.20.3

Added entity type tags can_breathe_under_water, undead, and zombies.
1.20.2-pre41.20.2

Added damage tag always_kills_armor_stands for damage types that should always fully kill an Armor Stand.
1.20.2-pre21.20.2

Resource pack format has been increased to 18.
1.20.2-pre11.20.2

Data pack format has been increased to 18.
1.20.2-pre11.20.2

Removed the execute if|unless function subcommand.
1.20.2-pre11.20.2

Removed the return run command syntax.
1.20.2-pre11.20.2

Numbers used as macro arguments are now always inserted without suffixes, regardless of numeric type.
1.20.2-pre11.20.2

Added enderPearlsVanishOnDeath game rule, defaulting to true. This controls whether thrown ender pearls vanish when the player that threw them dies.
1.20.2-pre11.20.2

Added map/map_icons.png spritesheet.
23w35a1.20.2

The bundled java runtime has been upgraded to 17.0.8.
23w33a1.20.2

The charts on the debug screen can now be toggled with F3+1 (pie chart), F3+2 (FPS and TPS) and F3+3 (bandwidth and ping).
23w33a1.20.2

Added an optional decal field to armor trim patterns, defaulting to false. If true, the pattern texture will be masked based on the underlying armor.
23w32a1.20.2

Data pack format has been increased to 17.
23w32a1.20.2

Resource pack format has been increased to 17.
23w32a1.20.2

The text field background is now a nine-sliced sprite at widget/text_field and widget/text_field_highlighted.
23w32a1.20.2

The scroll bar in lists and text fields is now a nine-sliced sprite at widget/scroller.
23w32a1.20.2

Mob effects are now namespaced ids rather than numeric values. For example, 1 is now minecraft:speed.
23w32a1.20.2

The structure for mob effect storage has been largely changed from pascal to snake case, with a couple of renames. All changes:

    Id → id (mob effect instances)
    Ambient → ambient (mob effect instances)
    Amplifier → amplifier (mob effect instances)
    Duration → duration (mob effect instances)
    ShowParticles → show_particles (mob effect instances)
    ShowIcon → show_icon (mob effect instances)
    HiddenEffect → hidden_effect (mob effect instances)
    FactorCalculationData → factor_calculation_data (mob effect instances)
    CustomPotionEffects → custom_potion_effects (potion, lingering_potion, splash_potion, tipped_arrow, arrow)
    Effects → effects (suspicious_stew, area_effect_cloud)
    EffectId → id (suspicious_stew)
    EffectDuration → duration (suspicious_stew)
    EffectId and EffectDuration → stew_effects (mooshroom)
    ActiveEffects → active_effects (player, armor_stand, mobs)
    Primary → primary_effect (beacon)
    Secondary → secondary_effect (beacon)

23w32a1.20.2

Added function sequence containing a single functions field. The array of sub-functions will run in sequence.
23w32a1.20.2

The all_of predicate and sequence function can now be declared implicitly as an inline array without a type.
23w32a1.20.2

Clients will no longer disconnect when receiving an invalid chat message, and will instead display a placeholder message.
23w32a1.20.2

Gameplay packets are now packed into bigger TCP-packets to reduce overhead from TCP-headers.
23w32a1.20.2

The Ctrl + F3 debug screen will now display ping and network traffic charts.
23w32a1.20.2

Loot tables, predicates and item modifiers are now parsed using codecs.
23w31a1.20.2

Data pack format has been increased to 16.
23w31a1.20.2

Resource pack format has been increased to 16.
23w31a1.20.2

Added feature flag trade_rebalance.
23w31a1.20.2

Barrier blocks can now be waterlogged by players in Creative mode.
23w31a1.20.2

Added server property log-ips. If false, player ips will be excluded from the log when joining. The default is true.
23w31a1.20.2

The last 50 used commands will be remembered and accessable across game sessions. Recent commands are stored in command_history.txt in the game folder.
23w31a1.20.2

Chunks are no longer sent over the network to the client in one big continuous batch. Instead, chunks within the client's render distance are sent in smaller batches depending on available bandwidth. This means clients with low bandwidth won't time out while loading a world, and can interact with it before all chunks are loaded.
23w31a1.20.2

Added optional field supported_formats to the pack object in pack.mcmeta, which can be an integer, list, or object. This enables multi-version packs. The pack_format field is still required, and its value must be contained in supported_fields if present. An example of each format:

    15 (only pack version 15)
    [15,18] (all pack versions through and including 15 and 18)
    {"min_inclusive": 15, "max_inclusive": 18} (all pack versions through and including 15 and 18)

23w31a1.20.2

Added optional field overlays to pack.mcmeta, which is an object with a single entries field containing a list of overlays. The order of overlays in entries is important, as the first in the list will be applied first. Each overlay entry has two fields:

    formats (range of supported pack versions, same syntax as supported_formats)
    directory (the directory to overlay for the respective versions)

23w31a1.20.2

Added pack overlays, which are sub-packs applied over the "normal" contents of a pack. Their directories (allowed characters: a-z, 0-9, _ and -) have their own assets and data directories, and are placed in the pack's root directory. They are applied based on the versions specified in the pack.mcmeta. Overlays can add and replace files, but not remove them.
23w31a1.20.2

New configuration phase in the network protocol to allow for more data-driven content in the future. The phase starts after login and lasts until the player joins a world. The configuration of data-driven registries, configuration of enabled features, and negotiation of resource packs has been moved from the play phase to this configuration phase. The updating of tags, exchange of custom packets, and ping/keep-alive packets are shared between the play and configuration phases.
23w31a1.20.2

When hitboxes are displayed through F3+B, entities that have a passenger will display the passenger's attachment point.
23w31a1.20.2

Validation for symbolic links now occurs in datapacks and resource packs.
23w31a1.20.2

All textures in the realms namespace have been moved into the minecraft namespace.
23w31a1.20.2

All textures containing multiple sprites in a sheet for GUI have been split into individual sprites under textures/gui/sprites. For example:

    widgets.png has been split into widgets/button.png and widgets/button_highlighted.png.

Each sprite can now be individually overriden by a resource pack instead of replacing the entire sheet. Sprites are loaded into the gui atlas from the textures/gui/sprites directory.
23w31a1.20.2

villager2.png has been renamed to villager.png.
23w31a1.20.2

icon/trial_available and realm_status/expires_soon GUI sprites are animated with .mcmeta declarations instead of individual sprites.
23w31a1.20.2

Sprites in the gui atlas can now configure scaling behavior through a new gui section in .mcmeta files. The gui section in .mcmeta contains one scaling field with the following type options:

    stretch (default) stretches the sprite across the desired space.
    tile repeates the sprite across the desired space, requiring width and height fields.
    nine_slice slices the sprite into 4 corners, 4 edges, and 1 center slice to be tiled across the desired space. width, height, and border fields are required.

23w31a1.20.2

The bundle tooltip background is now drawn as a nine-sliced sprite.
23w31a1.20.2

The icons for the Accessibility, Language, Realms News buttons have been split from their underlying button texture.
23w31a1.20.2

The Realms Invite button is now drawn as an overlay on the normal button texture, and the highlighted texture state for this button has been removed.
23w31a1.20.2

The exclamation marks on the notification\more.png have been removed.
23w31a1.20.2

Rate of accumulation of snow and ice is now affected by the randomTickSpeed game rule.
23w31a1.20.2

Added the /random command for controlling random sequences, with syntax:

    random value|roll <range> [<sequenceId>]: rolls a random number based on the given range. roll announces it in chat, while value does not
    random reset *|<sequenceId> [<seed>] [<includeWorldSeed>] [<includeSequenceId>]: resets the given sequenceId by using a seed to replace it

23w31a1.20.2

Added the /execute if function sub-command, with syntax:

    execute if|unless function <function> <continuation>: executes a function/function tag and matches the return value

23w31a1.20.2

Added the /return run sub-command, with syntax:

    return run <command>: takes the return value from the command and returns it as the return value of the function

23w31a1.20.2

A single backslash \ as the last non-whitespace character of a line now allows a command to be continued on the next line
23w31a1.20.2

Macros have been added to functions. They are defined by lines beginning with $. Macros contain one or more subsitutions in the form $(variable). All argument variables must be provided when calling function macros. Using macros mean their commands must be re-evaluated after variable substitution, which comes at a performance cost compared to pre-parsed functions.
23w31a1.20.2

To call macro functions, two new forms of the /function command were added, with syntax:

    function <id> <compound>: calls a function with a given data compound {}
    function <id> with <data source> [<path>]: calls a function from a source (such as what's used in /data get) and NBT path

23w31a1.20.2

Behavior of display entities has changed: Display entities now start updating their client-side position and rotation on the first tick after an update, similar to armor stands, mobs, and players. Duration of interpolation is now controlled by teleport_duration.
23w31a1.20.2

Added new generic.max_absorption attribute. It acts similar to generic.max_health, but is the upper bound for AbsorptionAmount rather than Health.
23w31a1.20.2

The entity_roar and entity_shake game events are removed and replaced with entity_action.
23w31a1.20.2

Added minecraft:ore_diamond_medium feature.
23w31a1.20.2

Added damage tag no_knockback, which causes knockback to not be caused by the damage itself. In Vanilla, this is used by explosions which cause knockback separately.
23w31a1.20.2

Added entity tag non_controlling_rider, representing entities that don't override their vehicles movement control.
23w31a1.20.2

Added block tag concrete_powder for Concrete Powder blocks.
23w31a1.20.2

Added block tag camel_sand_step_sound_blocks for block producing entity.camel.step_sand sounds
1.20-pre61.20

minecraft:air is no longer allowed in a recipe to specify an empty slot in a smithing recipe. Instead ingredients in array form are now also allowed, which can be empty arrays to signalize that slots needs to be left empty.
1.20-pre61.20

If the random_sequence is not specified, the loot table will now use a non-deterministic random source (the old behavior) instead of using a deterministic random sequence.
1.20-pre51.20

The uniform font has been updated to Unifont 15.0.03.
1.20-pre21.20

minecraft:air can now be used in smithing recipes to denote an ingredient that needs to match an empty slot.
1.20-pre11.20

Added damage types outside_border and generic_kill.
1.20-pre11.20

Changed the /data command. The string data source now accepts negavive boundaries, which are interpreted as an index counted from the end of the string.
1.20-pre11.20

Added field random_sequence (resource location) to loot tables. Loot tables now use deterministric random sequences based on both the world seed and the hash of the value of this field.
1.20-pre11.20

The server.properties file is now read and written with UTF-8 encoding, although it supports the previous encoding (ISO 8859-1/Latin 1) as a fallback when reading.
23w18a1.20

Data pack format has been increased to 15.
23w18a1.20

Added field sends_telemetry_event (boolean) to advancements. It defaults to false.
23w18a1.20

Renamed the alternative condition to any_of.
23w18a1.20

Added the all_of condition. It has a field terms and passes only if all the terms pass.
23w18a1.20

Changed the placed_block, item_used_on_block, and allay_drop_item_on_block advancement triggers. All fields are now collapsed into location which is no longer just a location predicate. It now accepts a list of loot conditions, just like the player condition.
23w17a1.20

Resource pack format has been increased to 15.
23w17a1.20

Removed glyph provider legacy_unicode.
23w17a1.20

Added unihex glyph provider. It has fields hex_file (resource location) and size_overrides, which is an object with 4 fields: from (codepoint), to (codepoint), left (int), and right (int).
23w17a1.20

Added reference glyph provider. It has a single field id (resource location), to include another font provider.
23w17a1.20

Added second level of organization of entries in credits.json on top of titles, called disciplines.
23w17a1.20

Changed the huge_fungus configured feature. Added a required field replaceable_blocks, which is a block predicate.
23w16a1.20

Data pack format has been increased to 14.
23w16a1.20

Added the /return command, with syntax: /return <value> where value is an integer.
23w16a1.20

Added trigger recipe_crafted. It has two conditions: recipe_id (resource location) and ingredients (list of item predicates).
23w16a1.20

Renamed the dynamic drop shards → sherds.
23w16a1.20

item_display items have been rotated 180 degrees around the Y axis to better match the transformation applied when rendering items on an armor stand head and in item frames.
23w16a1.20

Added item tag villager_plantable_seeds which determines the crops that villagers can place on farmland.
23w16a1.20

Added block tag maintains_farmland to control the blocks that keep farmland from turning to dirt during random ticks. Solid blocks above will still instantly turn farmland to dirt.
23w14a1.20

Resource pack format has been increased to 14.
23w14a1.20

Signs with click commands can now be interacted with even if the Sign is not waxed. Signs with non-"text" text components can no longer be edited.
23w14a1.20

Added item modifier reference. It has a single field name which is a reference to an item modifier.
23w14a1.20

Removed server and port command line arguments.
23w14a1.20

Added quickPlaySingleplayer, quickPlayMultiplayer, and quickPlayRealms command line arguments that allow the game to be launched directly into a world. The argument takes respectively the name of a world, the IP address of a server, or the Realms ID. Added quickPlayPath argument used for logging.
23w14a1.20

Removed block tag replaceable_plants and added replaceable and replaceable_by_trees to control blocks that are replaced when the tree grows through them.
23w14a1.20

Added block tag enchantment_power_provider and enchantment_power_transmitter, respectively containing bookshelf and #replaceable.
23w14a1.20

Added block tag sword_efficient to represent blocks that are broken slightly faster by a sword than normal.
23w14a1.20

Changed the minecraft.png texture.
23w12a1.20

Data pack format has been increased to 13.
23w12a1.20

Click commands on Signs can now only be invoked when the Sign is waxed, existing signs will no longer run the command when clicked.
23w12a1.20

Changed NBT of signs. Removed tags Text1, Text2, Text3, and Text4. Added tags front_text and back_text, each an object with tags: has_glowing_text (boolean), color (string), and messages (list of 4 text components). Additionally added a tag is_waxed (boolean).
23w12a1.20

Added dynamic drop shards option for the name field of the the dynamic loot table entry. It drops the shards of a decorated pot.
23w12a1.20

Removed feature flag update_1_20.
23w12a1.20

Added structure processor capped, which limits the number of replaced blocks for a structure piece to a configured maximum. It has fields delegate (structure processor) and limit (int provider).
23w12a1.20

Removed field output_nbt from the rule structure processor. Added block_entity_modifier as replacement. It takes a block entity modifier, which is an object that can be one of 4 types:

    clear: Completely clears the block NBT.
    passthrough: A no-op, leaves the block NBT without any modifications.
    append_static: Merges the block NBT with a static compound using a field data, similar to the old output_nbt.
    append_loot: Sets the LootTable and LootTableSeed NBT tags using a field loot_table.

1.19.4-pre41.19.4

Added damage tag bypasses_shield. It contains #bypasses_armor, falling_anvil, and falling_stalactite by default.
1.19.4-pre41.19.4

Behavior of display entities has changed: When a new interpolation is started, it now starts from the current state instead of the final state.
1.19.4-pre11.19.4

Resource pack format has been increased to 13.
1.19.4-pre11.19.4

The enchantment glint now has two separate texture files: enchanted_glint_entity.png and enchanted_glint_item.png.
1.19.4-pre11.19.4

Added exectute sub command execute positioned over, with syntax: execute positioned over <heightmap>. Heightmap has the following options:

    world_surface: Any non-air block.
    motion_blocking: Any motion blocking material (e.g. ignores flowers and grass).
    motion_blocking_no_leaves: Any non-leaf motion blocking material.
    ocean_floor: Any non-fluid motion blocking material.

1.19.4-pre11.19.4

Added damage tag bypasses_cooldown. Damage types with this tag bypass the regular invincibility time after taking damage. This tag is not used in vanilla, so you won't find this in the vanilla data pack!
1.19.4-pre11.19.4

Added damage tag always_hurts_ender_dragons.
1.19.4-pre11.19.4

Added entity type tag fall_damage_immune. Entity types with this tag do not take fall damage.
1.19.4-pre11.19.4

Added block and item tag smelts_to_glass, used by the glass smelt recipe.
23w07a1.19.4

Added entity interaction which allows detecting left and right clicks. It has tags width (float), height (float), response (boolean), attack (player action), and interaction (player action). Player actions have tags player (UUID) and timestamp (long).
23w07a1.19.4

The en_us.json file is now sorted alphanumerically.
23w07a1.19.4

Added crafting_decorated_pot recipe type. It has no extra configuration.
23w07a1.19.4

Added the show_notification field to the crafting_shaped recipe. It determines if a notification is shown when unlocking this recipe.
23w07a1.19.4

Added foliage placer cherry_foliage_placer. It has fields height (int provider), wide_bottom_layer_hole_chance (float), corner_hole_chance (float), hanging_leaves_chance (float), and hanging_leaves_extension_chance (float).
23w07a1.19.4

Added trunk placer cherry_trunk_placer. It has fields branch_count (int provider), branch_horizontal_length (int provider), branch_start_offset_from_top (int provider), and branch_end_offset_from_top (int provider).
23w06a1.19.4

Data pack format has been increased to 12.
23w06a1.19.4

Added the /damage command. It has syntax:

    damage <target> <amount> [<damageType>] [at <location>]
    damage <target> <amount> [<damageType>] [by <entity>] [from <cause>]

23w06a1.19.4

Added the /execute summon subcommand. It has syntax execute summon <entity id>.
23w06a1.19.4

Changed damage predicates. Removed fields is_projectile, is_explosion, bypasses_armor, bypasses_invulnerability, bypasses_magic, is_fire, is_magic, and is_lightning. Added new field tags which is a list of objects, each containting two fields: id (id of damage type tag) and expected (boolean).
23w06a1.19.4

Added damage types, which are stored in the damage_type folder. It has fields:

    message_id: String used for the translation message death.attack.{message_id}.message.
    exhaustion: Float.
    scaling: One of never, always, when_caused_by_living_non_player.
    effects: Optional. One of hurt, thorns, drowning, burning, poking, or freezing.
    death_message_type: Optional. default, fall_variants, or intentional_game_design.

23w06a1.19.4

Added three new display entities: item_display, block_display, and text_display. They share common tags: transformation, interpolation_duration, interpolation_start, billboard, view_range, shadow_radius, shadow_strength, width, height, glow_color_override, brightness.

    block_display: Has field block_state.
    item_display: Has fields item and item_display.
    text_display: Has fields line_width, text_opacity, background, shadow, see_through, default_background, alignment, and text.

23w06a1.19.4

Added shader types rendertype_text_background and rendertype_text_background_see_through for the text_display entity.
23w06a1.19.4

Added game events entity_dismount (frequency 6), and entity_mount (frequency 7).
23w06a1.19.4

Added doVinesSpread game rule, which defaults to true. It controls whether vines will spread to nearby blocks.
23w05a1.19.4

Removed field incompatible_armor_material from trim materials and added override_armor_materials, which is an optional map of armor material to overriden color palette.
23w05a1.19.4

Changed the /effect command. infinite is now a valid option for effect durations.
23w04a1.19.4

Added new relation for the /execute on subcommand: origin.
23w04a1.19.4

Added new atlas source: paletted_permutations. It has fields textures (list of textures), palette_key (texture), and permutations (map of string to texture).
23w04a1.19.4

Added trim patterns, which are stored in the trim_pattern data pack folder. It has fields asset_id (resource location), description (text component), and template_item (item).
23w04a1.19.4

Added trim materials, which are stored in the trim_material data pack folder. It has fields asset_name (string), description (text component), ingredient (item), item_model_index (float), and optionally incompatible_armor_material (string).
23w04a1.19.4

Added smithing_transform recipe type, it has fields template, base, addition and result.
23w04a1.19.4

Added new flag to the HideFlags tag on items. Adding 128 will hide armor trim item tooltips.
23w04a1.19.4

Added experimental item tags trim_materials, trim_templates, and trimmable_armor.
23w03a1.19.4

Data pack format has been increased to 11.
23w03a1.19.4

Added the /ride command, with syntax:

    ride <target> mount <vehicle>
    ride <target> dismount

23w03a1.19.4

The /clone command now supports cloning to and from different dimensions. New syntax: clone [from <sourceDimension>] <begin> <end> [to <targetDimension>] <destination> ....
23w03a1.19.4

Added the /execute on subcommand for selecting entities based on relation to the current executing entity. It has the syntax execute on <relation> where relation is one of: vehicle, passengers (all direct passengers), controller (the passenger that is in control), owner, leasher, target (attack target of mobs), attacker (last entity that damaged the current entity in the previous 5 seconds).
23w03a1.19.4

Added the /execute if|unless dimension <dimension> subcommand to check if the execution is in a matching dimension.
23w03a1.19.4

Added the /execute if|unless loaded <pos> subcommand to check if the position given is fully loaded (in regard to both blocks and entities).
23w03a1.19.4

Changed the /weather command. The time parameter now accepts a t, s, or d suffix. To retain existing functionality, you need to add an s suffix to pre-existing commands.
23w03a1.19.4

Changed the /title <selector> times command. All time parameters now accept a t, s, or d suffix.
23w03a1.19.4

Added a new data source to the /data command: string <entity|block|storage> [path] [start] [end]. It reads a slice of a value as text, start is inclusive and end is exclusive.
23w03a1.19.4

Added commandModificationBlockLimit game rule, which defaults to 32768. It controls the maximum number of blocks changed in one execution of clone, fill and fillbiome
23w03a1.19.4

Added fallback field to translate text components. Out-of-bound arguments in translate formats are no longer silently ignored.
23w03a1.19.4

Removed biome field precipitation and added has_precipitation (boolean) as replacement.
23w03a1.19.4

Renamed biome tag only_allows_snow_and_gold_rabbits → spawns_gold_rabbits to match its behavior.
23w03a1.19.4

Added biome tags spawns_white_rabbits, spawns_snow_foxes, increased_fire_burnout, and snow_golem_melts.
1.19.3-pre11.19.3

Added an int tag last_interacted_slot to block entity chiseled_bookshelf.
22w46a1.19.3

Added the /fillbiome command with syntax /fillbiome <from> <to> <biome>.
22w46a1.19.3

Added the if biome execute subcommand with syntax /execute if|unless biome <pos> <biome>. The biome argument can be a biome or biome tag.
22w46a1.19.3

Translation files and pack.mcmeta now use non-ascii characters instead of escape sequences.
22w45a1.19.3

Resource pack format has been increased to 12.
22w45a1.19.3

Added textures for the new player skins under entity/player/(slim|wide): alex, ari, efe, kai, makena, noor, steve, sunny, and zuri.
22w45a1.19.3

Removed player skin textures entity/steve and entity/alex.
22w45a1.19.3

Changed the gui/container/creative_inventory/tabs texture to fit an extra tab on the top and bottom.
22w45a1.19.3

Change the /publish command syntax:

    Old syntax: /publish [port]
    New syntax: /publish [allowCommands] [gamemode] [port]

22w45a1.19.3

Added a new Operator Utilities creative tab. It can be enabled in Options > Controls > Operator Items Tab > ON. Only opped players can see it.
22w45a1.19.3

Removed block tag overworld_natural_logs.
22w44a1.19.3

Added blockExplosionDropDecay, mobExplosionDropDecay and tntExplosionDropDecay game rules. When set to false, all blocks drop loot. When set to true, blocks drop loot randomly depending on how far from the explosion center. Defaults to false for TNT, true for block and mob.
22w44a1.19.3

Added snowAccumulationHeight game rule, which defaults to 1. When snowing, determines the maximum snow layers that can be accumulated in each block.
22w44a1.19.3

Added waterSourceConversion and lavaSourceConversion game rules. Defaults to true for water and false for lava.
22w44a1.19.3

Added globalSoundEvents game rule, defaults to true. It controls whether gameplay moments like spawning a wither are heard by all players.
22w44a1.19.3

Removed field name from template_pool.
22w43a1.19.3

Added languages Nahuatl (nah) and Rusyn (ry_ua).
22w42a1.19.3

Resource pack format has been increased to 11 (skipping 10).
22w42a1.19.3

Added field category to recipes. Depending on the recipe type there are different options:

    crafting recipes: one of building, redstone, equipment, or misc
    smelting recipes: one of food, blocks, or misc
    blasting recipes: one of blocks or misc
    smoking recipes: food
    campfire recipes: food
    stonecutting recipes: no category
    smithing recipes: no category

22w42a1.19.3

Added field features to pack.mcmeta, which is an object with a single list: enabled. This list can contain feature flags. The available feature flags are vanilla, bundle, and update_1_20.
22w42a1.19.3

Added folder datapacks to the vanilla datapack containing the feature flag datapacks. It contains the datapacks bundle and update_1_20.
22w42a1.19.3

Added block entity chiseled_bookshelf. It has a list Items.
22w42a1.19.3

Added block entity hanging_sign. It has the same NBT tags as other signs.
22w42a1.19.3

Added entity camel. It has NBT tags IsSitting (boolean) and LastPoseTick (long)
22w42a1.19.3

Added a new option bamboo to boat's Type tag.
22w42a1.19.3

Added block tag invalid_spawn_inside. It contains two blocks by default: end_portal and end_gateway.
22w42a1.19.3

Added block and item tag stripped_logs, containing all the stripped logs and stems.
22w42a1.19.3

Added memory module type gaze_cooldown_ticks, which has an int as value.
22w42a1.19.3

Added different sound events for bamboo wood and nether wood, prefixed with block.bamboo_wood and block.nether_wood respectively.
22w42a1.19.3

The realms translations are now merged with the base language files.
1.19.1-pre31.19.1

Added splash text "Technoblade never dies!".
1.19.1-pre31.19.1

Renamed the team_name parameter to target. This is now also used in the msg_command_outgoing chat type.
1.19.1-pre31.19.1

The msg_command chat type has been split into msg_command_outgoing and msg_command_incoming.
1.19.1-pre21.19.1

The server property enforce-secure-profile now defaults to true.
1.19.1-pre21.19.1

Removed the system, game_info, and tellraw_command chat types.
1.19.1-pre21.19.1

Removed the overlay field in chat types. Chat types can now no longer be used to show text on the actionbar.
1.19.1-pre21.19.1

Flattened the chat type decorations, which are now placed directly in the chat and narration fields, without a decoration object. Removed the priority field in narration.
1.19.1-rc11.19.1

The run_command click event no longer supports sending chat messages. Values now always need to have / as prefix.
22w24a1.19.1

Changed launchermeta.mojang.com → piston-meta.mojang.com. The old URL is still supported for now.
22w24a1.19.1

Added game events jukebox_play and jukebox_stop_play.
22w24a1.19.1

Added icons for chat reporting to the guide/social_interactions.png texture.
22w24a1.19.1

The style field in chat type decorations is now optional.
1.19-pre41.19

Added new language Malay, written in Arabic script. It has code zlm_arab.
1.19-pre21.19

Added biome tag mineshaft_blocking, containing deep_dark by default.
1.19-pre21.19

Added game event teleport.
1.19-pre11.19

Removed server property test-rainbow-chat.
1.19-pre11.19

Added game event instrument_play.
1.19-pre11.19

Changed dimension type. Added fields monster_spawn_block_light_limit (int) and monster_spawn_light_level (int provider).
1.19-pre11.19

Renamed cat variant british to british_shorthair.
1.19-pre11.19

Added memory module type is_panicking (boolean).
22w19a1.19

Added server property previews-chat. If true, clients will will be shown a preview of their chat message, decorated by the server.
22w19a1.19

Added temporary server property test-rainbow-chat. If true, chat will be styled with rainbow colors by the server. This option will be removed in the next snapshot.
22w19a1.19

Added a template subcommand to /place to place structure NBT files, with syntax:

    /place template <template> [pos] [rotation] [mirror] [integrity] [seed]

22w19a1.19

Added a poi subcommand to /locate to locate point of interest types, with syntax:

    /locate poi <type>

22w19a1.19

Added point_of_interest_type tags: acquirable_job_site, bee_home, and village.
22w18a1.19

Removed /placefeature and added /place command, which has 3 subcommands:

    /place feature <feature> [pos]: Places a configured feature
    /place jigsaw <pool> <start> <depth> [pos]: Places a jigsaw structure
    /place structure <structure> [pos]: Places a full worldgen structure (not an NBT file)

22w18a1.19

Removed item modifier set_goat_horn_sound.
22w18a1.19

Added item modifier set_instrument. It has one field options, which references an instrument tag from tags/instrument.
22w18a1.19

Added chat types, which are stored in the chat_type folder. There are 8 vanilla chat types which can be overwritten:

    chat: When a player sends a message to chat
    emote_command: When a player uses the /me command
    game_info: For messages that are displayed to the actionbar
    msg_command: When a player uses the /msg command
    say_command: When a player uses the /say command
    system: For system messages
    team_msg_command: When a player uses the /teammsg command
    tellraw_command: When the /tellraw command is used

22w18a1.19

Added banner pattern tags in tags/banner_pattern, whichs allows modifying behavior of the loom block.
22w18a1.19

The bundled java runtime has been upgraded to 17.0.3
22w18a1.19

Added field to the FactorCalculationData field in potions and effects: factor_start, which is a float.
22w17a1.19

Added server property enforce-secure-profile, which can be either false or true.
22w17a1.19

Added item modifier set_goat_horn_sound. It has no extra properties, and sets the item's SoundVariant NBT tag to a random value between 0 and 3 (inclusive), which are the non screaming goat variants.
22w17a1.19

Added optional field start_jigsaw_name for jigsaw structures, which is a resource location.
22w16a1.19

Changed paintings NBT. Renamed fields Motive → variant and Facing → facing.
22w15a1.19

Removed item_delivered_to_player advancement trigger and added thrown_item_picked_up_by_player to replace it. It has conditions player, entity, and item.
22w15a1.19

Added advancement trigger avoid_vibration. It has no extra conditions.
22w15a1.19

Renamed block tag occludes_vibration_signals → dampens_vibrations. It includes wool and wool carpets by default.
22w15a1.19

Added particle type sonic_boom.
22w15a1.19

Added memory module types sonic_boom_cooldown, sonic_boom_sound_cooldown, and sonic_boom_sound_delay.
22w15a1.19

Added field replaceable to carver configuration, which is a block/tag.
22w15a1.19

Removed features ice_patch and surface_disk. They can now be replaced with a disk feature.
22w15a1.19

Changed disk feature configuration:

    Replaced state field with state_provider, which is a rule based block state provider. It has two fields: fallback (block state provider) and rules, which is a list of objects. A rule has two fields: if_true (block predicate) and then (block state provider).
    Replaced targets field with target, which is now a block predicate.
    Removed field can_origin_replace.

22w15a1.19

Changed root placer configuration:

    Renamed field y_offset → trunk_offset_y.
    Moved fields max_root_width, max_root_length, random_skew_chance, can_grow_through, muddy_roots_in, and muddy_roots_provider to inside an object mangrove_root_placement.
    Added field above_root_placement to all root placers, which is an object with fields above_root_placement_chance (float between 0 and 1) and above_root_provider (block state provider).

22w14a1.19

Removed location field from triggers location, slept_in_bed, hero_of_the_village and voluntary_exile. Instead the player.location field can be used.
22w14a1.19

Replaced entity predicate fields player, fishing_hook, lightning_bolt, and catType with type_specific. It has a field type (an entity type), and other fields depending on the type.

    player: a player predicate
    fishing_hook: has a field in_open_water (boolean)
    lightning: has fields blocks_set_on_fire (int bounds) and entity_struck (entity predicate)
    cat: has a field variant, which can be one of all_black, black, british, calico, jellie, persian, ragdoll, red, siamese, tabby, or white.
    slime: (matches slimes and magma creams) has a field size (int bounds)
    frog: has a field variant, which can be one of cold, temperate, or warm.

22w14a1.19

Added trigger item_delivered_to_player which only has the player condition.
22w14a1.19

Added trigger allay_drop_item_on_block which has conditions player, location and item.
22w14a1.19

Changed warden NBT. anger.suspect is now a list of objects, with fields uuid (UUID) and anger (int).
22w14a1.19

Added player NBT field LastDeathLocation, which is an object with fields: dimension (string) and pos (list of 3 ints)
22w14a1.19

Changed cat NBT: Removed field CatType which was an int and replaced it with variant, which is a resource location of a cat variant. Variants:

    0 → tabby
    1 → black
    2 → red
    3 → siamese
    4 → british
    5 → calico
    6 → persian
    7 → ragdoll
    8 → white
    9 → jellie
    10 → all_black

22w14a1.19

Added disk feature field: can_origin_replace (block/tag).
22w14a1.19

Added field to leave_vine tree decorator: probability (float between 0 and 1). This was previously hardcoded to 0.25.
22w14a1.19

Added tree decorator attached_to_leaves with fields: probability (float between 0 and 1), exclusion_radius_xz (int between 0 and 16), exclusion_radius_y (int between 0 and 16), block_provider (block state provider), required_empty_blocks (int between 1 and 16), directions (non empty list of directions).
22w14a1.19

Added optional root_placer field to tree feature. Currently only one root placer type: mangrove_root_placer with fields: can_grow_through (block/tag), muddy_roots_in (block/tag), muddy_roots_provider (block state provider), max_root_width (int between 1 and 12), max_root_length (int between 1 and 64), y_offset (int provider), random_skew_chance (float between 0 and 1).
22w14a1.19

Added trunk placer upwards_branching_trunk_placer. It has fields extra_branch_steps (int > 0), place_branch_per_log_probability (float between 0 and 1), extra_branch_length (int >= 0), can_grow_through (block/tag).
22w14a1.19

Renamed feature glow_lichen → multiface_growth (no configuration changes).
22w14a1.19

Added feature surface_disk, which has the same configuration as disk.
22w14a1.19

Changed rottable_blocks field in block_rot processor. The block tag now needs to be prefixed with a #, and allows block IDs or a list of block IDs.
22w14a1.19

Moved jigsaw structure configuration back out of the value field (reverts a change from last snapshot).
22w13a1.19

Added advancement trigger kill_mob_near_sculk_catalyst. It has entity and killing_blow conditions, just like the player_killed_entity trigger.
22w13a1.19

Renamed game events:

    drinking_finish → drink
    elytra_free_fall → elytra_glide
    entity_damaged → entity_damage
    entity_dying → entity_die
    entity_killed → entity_die
    mob_interact → entity_interact
    ravager_roar → entity_roar
    wolf_shaking → entity_shake
    fishing_rod_cast → item_interact_start
    fishing_rod_reel_in → item_interact_finish
    block_press and block_switch → block_activate
    block_unpress and block_unswitch → block_deactivate

22w13a1.19

Removed game events in favor of existing ones:

    shulker_open → container_open
    shulker_close → container_close
    ring_bell → block_change

22w13a1.19

Added game events note_block_play and swim.
22w13a1.19

Added game event tag ignore_vibrations_on_occluding_block.
22w13a1.19

Renamed item and block tag carpets → wool_carpets.
22w13a1.19

Added memory module types liked_player (UUID), liked_noteblock (global pos), liked_noteblock_cooldown_ticks (int), item_pickup_cooldown_ticks (int).
22w13a1.19

Removed structure field adapt_noise and added optional field terrain_adaptation, one of none, beard_thin, beard_box, or bury.
22w13a1.19

Changed jigsaw structure configuration. All fields except type are now wrapped in a field value.
22w13a1.19

Added field extra_rare_growths to configured feature sculk_patch, which is an int provider.
22w13a1.19

Added optional rottable_blocks field in block_rot processor, which is a block tag.
22w12a1.19

Added particle type shriek. It has a single int parameter delay.
22w12a1.19

Removed block position parameter origin from particle type vibration. It now only has a position parameter destination and an int parameter arrival_in_ticks.
22w12a1.19

Added warden NBT field anger, which is an object with a single field suspect. This is map from UUID to int, this currently does not serialize correctly.
22w12a1.19

Added optional field to effect and potion NBT FactorCalculationData, which is an object with the following fields: padding_duration (int), factor_target (float), factor_current (float), effect_changed_timestamp (int), factor_previous_frame (float), and had_effect_last_tick (boolean)
22w12a1.19

Added player NBT field warden_spawn_tracker. It has 3 int fields: ticks_since_last_warning, warning_level, and cooldown_ticks.
22w12a1.19

Added memory module types recent_projectile, is_sniffing, is_emerging, roar_sound_delay, dig_cooldown, roar_sound_cooldown, sniff_cooldown, touch_cooldown, and vibration_cooldown.
22w12a1.19

Removed density function slide. Instead a combination of add, mul and y_clamped_gradient is used to achieve the same result.
22w12a1.19

Removed noise settings fields noise.sampling, noise.top_slide, and noise.bottom_slide. Instead these configurations are moved to density functions.
22w12a1.19

Added fields to old_blended_noise density function: xz_scale, y_scale, xz_factor, y_factor, and smear_scale_multiplier.
22w12a1.19

Added field to jigsaw structure: max_distance_from_center, which is an int between 1 and 128.
22w12a1.19

Foliage placers will now always waterlog the blocks when replacing water, if the foliage block has a waterlogged block state.
22w11a1.19

Data pack format has been increased to 10.
22w11a1.19

Resource pack format has been increased to 9.
22w11a1.19

Added space glyph provider. It has a single field advances which is a map of codepoints to glyph advance (width). This enables custom space widths, including negative spaces.
22w11a1.19

Font providers now manually need to declare the space glyph.
22w11a1.19

Added optional field filter to pack.mcmeta. When present, must have a block field which is a list of patterns. Each pattern has two optional fields: namespace and path, which are regular expressions. It hides resources in packs loaded before the current pack that match the pattern.
22w11a1.19

Renamed location predicate field feature → structure.
22w11a1.19

Added particle types sculk_charge, sculk_charge_pop and sculk_soul.
22w11a1.19

Added server property max-chained-neighbor-updates which controls the amount of consecutive neighbor updates before skipping additional ones. Negative values remove the limit.
22w11a1.19

Potion and effect field Id, previously a byte is now an int. When checking the b suffix needs to be removed.
22w11a1.19

The added frog entity has all the breedable and mob tags, and additionally a Variant tag, which is an int 0 (temperate), 1 (warm), or 2 (cold).
22w11a1.19

The added tadpole entity has all mob tags, as well as two tags: FromBucket which is a boolean, and Age which is an integer. When it reaches 24000 the tadpole grows into a frog.
22w11a1.19

Added memory module types is_in_water and is_pregnant.
22w11a1.19

Added boat type mangrove.
22w11a1.19

Added block tag dragon_transparent, which behaves very similarly to dragon_immune. It contains #fire and light by default.
22w11a1.19

Dimension types can no longer be inlined in the dimension, they have to be a reference to a separate dimension_type file.
22w11a1.19

Removed field seed in noise chunk generator and end biome source.
22w11a1.19

Changed noise settings. Removed field terrain_shaper, the terrain shaper splines have been moved to density functions. Added field spawn_target, which is a list of climate target points.
22w11a1.19

Removed density function terrain_shaper_spline, and changed density function spline: removed two fields min_value and max_value.
22w11a1.19

Removed biome field category. Functionality has been moved to biome tags.
22w11a1.19

Added feature type sculk_patch. It has 5 required integer fields: charge_count, amount_per_charge, spread_attempts, growth_rounds, and spread_rounds and 1 required float field: catalyst_chance.
22w11a1.19

Changed structure set placement.

    Fields salt and locate_offset are no longer specific to the random_spread placement type.
    Added field preferred_biomes to the placement type concentric_rings, which is a biome tag.
    Added optional field exclusion_zone, which is an object with two fields: other_set: a structure set reference, and chunk_count: an integer between 1 and 16
    Added optional fields frequency: a number between 0 and 1, and frequency_reduction_method, which is one of default, legacy_type_1, legacy_type_2, or legacy_type_3.

22w11a1.19

Moved worldgen/configured_structure_feature to worldgen/structure folder.
22w11a1.19

Changed structure fields:

    Added field step which is one of raw_generation, lakes, local_modifications, underground_structures, surface_structures, strongholds, underground_ores, underground_decoration, fluid_springs, vegetal_decoration, or top_layer_modification.
    All fields that were in config are now in the root.
    Merged village, bastion_remnant and pillager_outpost types to jigsaw, and added the fields start_height: a height provider, project_start_to_heightmap: an optional heightmap type, and use_expansion_hack: a boolean.
    For the ruined_portal type: removed field portal_type and replaced it with a weighted list setups.
    For the mineshaft type: renamed field type → mineshaft_type.
    Removed fields probability, this is instead being controlled by the structure set frequency settings.

22w11a1.19

Added world presets, stored in the worldgen/world_preset directory. It has a single field dimensions, which is a map of dimension IDs to dimension settings, previously in the dimension folder.
1.18.2-pre21.18.2

Added density function spline. It has a field spline which is a cubic spline with the same format as the terrain shaper splines, with the exception that coordinate is a density function.
1.18.2-pre11.18.2

Data pack format has been increased to 9.
1.18.2-pre11.18.2

The /locate command now expects configured structure features, rather than structure types. For example /locate village_desert.
1.18.2-pre11.18.2

The /locate and /locatebiome commands now support tags, when prefixing with a #. For example /locate #village.
1.18.2-pre11.18.2

Added configured structure feature fields adapt_noise and spawn_overrides.
1.18.2-pre11.18.2

Added structure sets, stored in the data pack folder worldgen/structure_set. They reference a weighted list of configured structure features in structures and a structure placement configuration in placement. This matches the old structure placement from the noise settings. There are currently two possible placement types: random_spread and concentric_rings.
1.18.2-pre11.18.2

Removed noise settings fields noise_caves_enabled, noodle_caves_enabled, and structures.
1.18.2-pre11.18.2

Added noise settings field noise_router with the following required sub-fields, each a density function: barrier, fluid_level_floodedness, fluid_level_spread, lava, temperature, vegetation, continents, erosion, depth, initial_density_without_jaggedness, final_density, vein_toggle, vein_ridged, vein_gap.
1.18.2-pre11.18.2

Added density functions, stored in the data pack folder worldgen/density_function. They're functions that transform a block position into a number. The currently available density function types are abs, add, beardifier, blend_alpha, blend_density, blend_offset, cache_2d, cache_all_in_cell, cache_once, clamp, constant, cube, end_islands, flat_cache, half_negative, interpolated, max, min, mul, noise, old_blended_noise, quarter_negative, range_choice, shift, shift_a, shift_b, shifted_noise, slide, square, squeeze, terrain_shaper_spline, weird_scaled_sampler, and y_clamped_gradient. Some types map a single density function in argument, others combine two functions in argument1 and argument2. Others have more complex configurations.
22w07a1.18.2

Added field biomes to configured structure features, which is a biome tag that determines which biomes the structure can generate in. For vanilla this biome tag format is minecraft:has_structure/<structure>.
22w07a1.18.2

Added biome tags is_badlands, is_beach, is_deep_ocean, is_forest, is_hill, is_jungle, is_mountain, is_nether, is_ocean, is_river, and is_taiga.
22w06a1.18.2

Universal tags: any type present in registries can now have tags. They can be defined in a data pack in the directory <namespace>/tags/<registry>. Existing tags (blocks, items, fluids, entity_types, game_events and functions) keep their name for now.
22w06a1.18.2

Some fields that previously accepted a list of IDs, or a single ID now accept tags, either in the format ["id1", "id2"], "id" (as shurtcut for ["id"]), or #tag. Changed fields:

    Configured feature glow_lichen: can_be_placed_on is a block tag
    Configured feature spring_feature: valid_blocks is a block tag
    Configured feature simple_random_selector: features is a placed feature tag
    Block predicate matching_block: blocks is a block tag
    Block predicate matching_fluids: fluids is a fluid tag
    Biome: inner list of features is a placed feature tag and carvers values are carver tags
    Biome source checkerboard: biomes is a biome tag

22w06a1.18.2

Some fields now require the ID to be prepended with #, and don't yet accept a list of tags. Changed fields:

    Dimension type: infiniburn
    Configured feature geode: blocks.cannot_replace and blocks.invalid_blocks
    Configured feature vegetation_patch and waterlogged_vegetation_patch: replaceable
    Configured feature root_system: root_replaceable
    Structure processor protected_blocks: value

22w06a1.18.2

Modified the format of the structures tag in noise settings. It is now a single map with structure types as keys and structure placement configuration as values. There are currently two possible placement types:

    random_spread: Has the old fields from the inner structures map. Additionally, has an optional spread_type field which can be one of linear or triangular, and an optional locate_offset field, which is a list of 3 numbers.
    concentric_rings: Has 3 required int fields, the same as the old stronghold configurarion: distance, spread, and count.

22w06a1.18.2

Added a new resource file assets/minecraft/regional_compliancies.json configuring the hourly popup messages displayed in South Korea.
22w03a1.18.2

The /locate command now uses a namespaced ID parameter.
22w03a1.18.2

Added the /placefeature command that places a configured feature in the world.
1.18-pre51.18

Added block predicate has_sturdy_face with fields offset and direction.
1.18-pre51.18

Added block predicate matching_block_tag with fields offset and tag.
1.18-pre51.18

Added block tags terracotta, replacable_plants, azalea_grows_on, and azalea_root_replaceable.
1.18-pre51.18

Added item tags dirt and terracotta.
1.18-pre51.18

Changed configured feature random_boolean_selector. The feature_false and feature_true are now placed features instead of configured features.
1.18-pre51.18

Changed configured feature vegetation_patch and waterlogged_vegetation_patch. The vegetation_feature field is now a placed feature instead of a configured feature.
1.18-pre31.18

Changed configured feature glow_lichen. The can_be_placed_on field is now a list of block IDs instead of a list of block states.
1.18-pre21.18

Removed biome field player_spawn_friendly.
1.18-pre11.18

The --reports option in data generator now exports full vanilla worldgen reference files, instead of only biomes.
1.18-pre11.18

Added placed features, stored in the data pack folder worldgen/placed_feature. They reference a configured feature and a list of configured decorators.
1.18-pre11.18

Changed feature twisting_vines. Added fields spread_width, spread_height, and max_height which are all positive integers.
1.18-pre11.18

Changed feature nether_forest_vegetation. Added fields spread_width and spread_height which are both positive integers.
1.18-pre11.18

Changed feature lake. Removed field state and added fields fluid and barrier which are both block state providers.
1.18-pre11.18

Renamed surface rule field run_depth_multiplier → surface_depth_multiplier.
1.18-pre11.18

Changed surface condition stone_depth. Added fields offset which is an int and add_surface_secondary_depth which is a boolean. Renamed field add_run_depth → add_surface_depth.
1.18-pre11.18

Added block predicate solid which tests if the block material is solid.
1.18-pre11.18

Added block predicate inside_world_bounds which tests if the location is inside the (vertical) world bounds. It has an optional offset field which takes a block pos.
1.18-pre11.18

Removed decorators decorated, dark_oak_tree, iceberg, count_extra, lava_lake, cave_surface, end_gateway, and nope.
1.18-pre11.18

Renamed decorators:

    count_multilayer → count_on_every_layer
    square → in_square
    scatter → random_offset
    chance → rarity_filter
    count_noise → noise_threshold_count
    count_noise_biased → noise_based_count
    surface_relative_threshold → surface_relative_threshold_filter
    water_depth_threshold → surface_water_depth_filter
    range → height_range
    block_filter → block_predicate_filter

1.18-pre11.18

Added decorator biome. Checks that the current feature exists in the biome at this position.
21w44a1.18

Added server property hide-online-players. If true, a player list won't be sent on a status request.
21w44a1.18

Added block tags to control mob spawning: animals_spawnable_on, axolotls_spawnable_on, goats_spawnable_on, mooshrooms_spawnable_on, parrots_spawnable_on, polar_bears_spawnable_on_in_frozen_ocean, rabbits_spawnable_on, foxes_spawnable_on, wolves_spawnable_on.
21w44a1.18

Removed noise settings fields bedrock_roof_position, bedrock_floor_position, and deepslate_enabled since they can be replaced with the surface_rules field.
21w44a1.18

Removed noise settings fields noise.density_factor and noise.density_offset.
21w44a1.18

Added noise settings field noise.large_biomes.
21w44a1.18

Added surface condition vertical_gradient. It has fields random_name which is a resource location, true_at_and_below which is a vertical anchor, and false_at_and_above which is a vertical anchor. It can be used to create the bedrock or deepslate gradients.
21w44a1.18

Added surface condition above_preliminary_surface, which has no extra fields.
21w43a1.18

Changed chunk storage. Removed the Level field and moved everything it contained up. Renamed fields:

    Entities → entities
    TileEntities → block_entities
    TileTicks and ToBeTicked → block_ticks
    LiquidTicks and LiquidsToBeTicked → fluid_ticks
    Sections → sections
    Structures → structures
    Structures.Starts → structures.starts

Added fields:

    yPos the minimum Y position in the chunk.
    below_zero_retrogen containing data to support below Y=0 generation.
    blending_data containing data to support world blending.

21w43a1.18

Changed noise settings. Added field noise.terrain_shaper, defining the terrain shape using nested splines. It has 3 spline fields offset, factor, and jaggedness.

Splines can either be constant numbers, or objects that define a spline. They have 2 fields:

    coordinate a string defining what noise to use, one of continents, erosion, weirdness, or ridges
    points an array of objects with a number field location, number derivative, and a nested spline value.

21w42a1.18

Replaced particles light and barrier with block_marker. This particle renders a texture based on the particle field of the block model. It takes a block state option similarly to the block particle, for example block_marker wheat[age=2].
21w42a1.18

Light blocks now show their light level when viewed in the world.
21w42a1.18

Changed decorator cave_surface. Added boolean field allow_water.
21w42a1.18

Added decorator scatter that applies an offset. It has two fields xz_spread and y_spread, both taking an int provider.
21w42a1.18

Added int provider clamped_normal, similar to the existing float provider. It has fields mean, deviation, min_inclusive and max_inclusive.
21w42a1.18

Removed small_dripstone feature and replaced it with pointed_dripstone. This feature takes 4 optional fields chance_of_taller_dripstone, chance_of_directional_spread, chance_of_spread_radius2, chance_of_spread_radius3.
21w42a1.18

Removed field noise.use_legacy_random from noise settings. The new random generator is now always enabled.
21w42a1.18

Removed field octaves from noise settings. It is no longer possible to configure climate noise parameters per dimension. Instead you can configure global noise parameters in files like worldgen/noise/temperature.json.
21w42a1.18

Added worldgen/noise folder in data packs to store noise parameters.
21w42a1.18

Changed surface condition noise_threshold. Removed field name and changed field noise so it now takes a resource location pointing to noise parameters in worldgen/noise.
21w41a1.18

The server.jar file is now signed, and can be verified offline without the need for a separate manifest hash.
21w41a1.18

The noise settings option legacy_random_source has beeen set to false for the overworld. This enables the new Xoroshiro random number generator.
21w41a1.18

Added generation step FLUID_SPRINGS between UNDERGROUND_DECORATION and VEGETAL_DECORATION.
21w41a1.18

Changed noise settings. Removed fields noise.simplex_surface_noise and noise.random_density_offset.
21w41a1.18

Removed surface builders. Removed the surface_builder field from biomes.
21w41a1.18

Added surface rules, a new concept which replaces surface builders. Noise settings now have a surface_rule field. There are currently 4 surface rules:

    block places a block state from result_state.
    sequence runs a list of surface rules from the field sequence in order, until one returns a block state.
    condition checks a surface condition in if_true and only if it passes runs the surface rule in then_run.
    bandlands a hardcoded surface rule used in badlands.

The condition surface rule uses surface conditions. There are currently 9 conditions:

    biome checks if the biome at the location is one of the given biome IDs in the array biome_is.
    hole
    noise_threshold checks if the value of a noise using name and noise is between min_threshold and max_threshold.
    not inverts the surface condition in field invert.
    steep
    stone_depth checks for hitting the depth of stone. Takes as surface_type either floor or ceiling. Used for example for grass blocks, or for dirt if add_run_depth is true.
    temperature
    water checks for water at an offset. Also has fields run_depth_multiplier and add_stone_depth.
    y_above checks that the location is above a vertical anchor specified by anchor. Also has fields run_depth_multiplier and add_stone_depth.

21w40a1.18

Renamed biomes:

    stone_shore → stony_shore
    jungle_edge → sparse_jungle
    snowy_tundra → snowy_plains
    giant_tree_taiga → old_growth_pine_taiga
    giant_spruce_taiga → old_growth_spruce_taiga
    tall_birch_forest → old_growth_birch_forest
    moutains → windswept_hills
    wooded_mountains → windswept_forest
    gravelly_mountains → windswept_gravelly_hills
    shattered_savanna → windswept_savanna
    wooded_badlands_plateau → wooded_badlands
    lofty_peaks → jagged_peaks
    snowcapped_peaks → frozen_peaks

21w40a1.18

Removed biomes badlands_plateau, bamboo_jungle_hills, birch_forest_hills, dark_forest_hills, desert_hills, desert_lakes, giant_spruce_taiga_hills, giant_tree_taiga_hills, jungle_hills, modified_badlands_plateau, modified_gravelly_mountains, modified_jungle, modified_jungle_edge, modified_wooded_badlands_plateau, mountain_edge, mushroom_field_shore, shattered_savanna_plateau, snowy_mountains, snowy_taiga_hills, snowy_taiga_mountains, swamp_hills, taiga_hills, taiga_mountains, tall_birch_hills, wooded_hills.
21w40a1.18

Removed water lake feature.
21w40a1.18

Temperature and humidity noises no longer change depending on the Y coordinate.
21w40a1.18

Bedrock layers generate dependent on the world seed now.
21w40a1.18

Removed decorator block_survives_filter decorator and replaced it with the added world_survive block predicate. This takes fields offset and state.
21w40a1.18

The offset field of block predicates is now optional.
21w40a1.18

Added block predicate true which always passes.
21w40a1.18

Changed feature block_column. Replaced field allow_water which took a boolean with allowed_placements which takes a block predicate.
21w40a1.18

Changed features random_patch, flower and flower_no_bonemeal. Removed fields only_in_air, allowed_on and disallowed_on, since they can be replaced with a block_filter decorator.
21w40a1.18

Added noise settings field noise.legacy_random_source.
21w39a1.18

Added trigger fall_from_height when a player lands after falling. Takes conditions start_position and distance.
21w39a1.18

Added trigger ride_entity_in_lava, which triggers every tick a player rides an entity in lava. Takes conditions start_position (location predicate) and distance (distance predicate).
21w39a1.18

Changed conditions for nether_travel trigger. Renamed condition entered to start_position. Removed condition exited, since it is identical to player.location.
21w39a1.18

Added function set_potion, it has a single field id which takes a potion ID.
21w39a1.18

Resource pack format has been increased to 8.
21w39a1.18

GUI tecture inventory.png now contains an extra sprite for the thin layout of the effects list.
21w39a1.18

Changed chunk storage. In sections, renamed Palette to block_states.palette and BlockStates to block_states.data. Moved the Biomes field to within sections using a similar format biomes.palette and biomes.data.
21w39a1.18

Carving masks are now stored as long[] instead of byte[].
21w39a1.18

The server.jar now contains individual libraries instead of being a flat archive. On startup, libraries will be unpacked into a directory. To run a different main class than the server, use the bundlerMainClass property.
21w39a1.18

Added int provider weighted_list. It has a field distributions which takes an array of objects each having an int weight and nested int provider data.
21w39a1.18

Added "Block predicates" to worldgen. These are not the same as block predicates from advancements or predicates! Current block predicates are: all_of, any_of, not, matching_blocks, matching_fluids, and replaceable.
21w39a1.18

Changed decorator block_filter. It now only takes a block predicate in field predicate.
21w39a1.18

Changed feature simple_block. Removed config fields place_on, place_in, and place_under. A block_filter decorator can be used instead.
21w39a1.18

Replaced feature growing_plant to block_column. Removed the config fields body_provider, head_provider, and height_distribution. Instead there is now a field layers that takes an array of objects each having an int provider height and block state provider state. Additionally there is a prioritize_tip boolean field. If true, it will start placing from the tip, which can be important in tight spaces.
21w39a1.18

Changed the random_patch, flower and flower_no_bonemeal features. Now takes fields tries, xz_spread, y_spread, only_in_air, allowed_on, disallowed_on, and feature. Different X and Z spreads are no longer allowed, but it is now possible to nest a different feature in the placement.
21w39a1.18

Removed "Block placers", which were only used in the random_patch feature.
21w39a1.18

Removed decorators heightmap_spread_double and spread_32_above.
21w39a1.18

Added decorator environment_scan. Scans block either up or down depending on the direction_of_search and max_steps fields. At each step, tests a block predicate target_condition.
21w38a1.18

Added "Simulation distance" option where entities outside will not be updated. It can be change with the slider in the client options or with the server property simulation-distance.
21w38a1.18

Removed sapling_provider field from tree features.
21w38a1.18

Added block_survives_filter decorator. Tests that a certain block state would survive in the location.
21w38a1.18

Added block_filter decorator. It has a list of allowed block IDs and a list of disallowed block IDs. It can also offset the location to check.
21w38a1.18

Renamed block state providers noise_2d_provider → noise_provider, dual_noise_2d_provider → dual_noise_provider, and noise_2d_cutoff_provider → noise_threshold_provider.
21w38a1.18

Removed carver field aquifers_enabled.
21w37a1.18

Added the /jfr command, along with the --jfrProfile startup option.
21w37a1.18

Added illageralt rule-like font from Minecraft Dungeons.
21w37a1.18

The set_contents and set_loot_table functions now require a type field with a valid block entity type.
21w37a1.18

Data pack format has been increased to 8.
21w37a1.18

Removed length limits for scoreboard objectives, score holders (fake players), and team names.
21w37a1.18

Added custom_spawn_rules NBT field to spawners, in the SpawnData object and SpawnPotentials list.
21w37a1.18

Changed spawner NBT field SpawnPotentials format to { weight: <int>, data: { entity: {...}, custom_spawn_rules: {...} } }.
21w37a1.18

Moved contents of spawner NBT field SpawnData to SpawnData.entity.
21w37a1.18

Renamed block tag lava_pool_stone_replaceables to lava_pool_stone_cannot_replace.
21w37a1.18

Removed seed field from the multi_noise biome source.
21w37a1.18

Removed altitude_noise, temperature_noise, humidity_noise and weirdness_noise fields from the multi_noise biome source, and added octaves field to noise settings, used for both the biome and terrain noise.
21w37a1.18

Removed the vanilla_layered biome source.
21w37a1.18

Removed altitude biome noise parameter.
21w37a1.18

Added continentalness, erosion and depth biome noise parameters.
21w37a1.18

Multi noise debug values now show on the F3 screen.
21w37a1.18

Removed scale and depth fields from biomes, since terrain is now shaped independently from biome placement.
21w37a1.18

Removed starts field from biomes.
21w37a1.18

Added mob category axolotls.
21w37a1.18

Added surface builders grove, lofty_peaks, snowcapped_peaks, snowy_slopes, stone_shore, and stony_peaks.
21w37a1.18

Added decorator surface_relative_threshold.
21w37a1.18

Removed block state providers forest_flower_provider and plain_flower_provider.
21w37a1.18

Added block state providers dual_noise_2d_provider, noise_2d_cutoff_provider, and noise_2d_provider.
21w37a1.18

Removed field min_surface_level from noise settings.
1.17.1-pre21.17

Deaths of named mobs are now logged.
1.17-pre21.17

Changed NBT of fireball entity. The field ExplosionPower is now a byte instead of an int.
1.17-pre11.17

The credits file is now a .json file instead of .txt.
1.17-pre11.17

Added /perf command. It has two subcommands /perf start and /perf stop. Records profiling information and saves it in a zip file in .minecraft/debug/profiling.
1.17-pre11.17

Removed command /debug report, instead use the new /perf command.
1.17-pre11.17

Added advancement trigger started_riding, which is triggered when a player starts riding a vehicle or entity starts riding vehicle currently ridden by player.
1.17-pre11.17

Added advancement trigger lightning_strike, which is triggered when lightning finishes (the entity has disappeared). It has conditions lightning which is an entity predicate and bystander which is one of the entities around the strike, not hurt by it.
1.17-pre11.17

Added advancement trigger using_item, which is triggered every tick when the player is using an item continuously (usually by holding down the mouse button). It has a condition item which is an item predicate.
1.17-pre11.17

Changed advancement trigger effects_changed. Added condition source which is an entity predicate that matches the entity that triggered the change. Can be empty.
1.17-pre11.17

Changed item predicates. Now has an items field instead of item, which is a list of item IDs.
1.17-pre11.17

Changed block predicates. Now has a blocks field instead of block, which is a list of block IDs.
1.17-pre11.17

Changed entity predicates. Added fields passenger, stepping_on which is a location predicate, and lightning_bolt which is only valid for lightning bolts. This lightning_bolt object has two sub-fields blocks_set_on_fire and entity_struck.
1.17-pre11.17

Changed player predicate. Added field looking_at which is an entity predicate. The entity needs to have a line-of-sight to the player in order to match.
1.17-pre11.17

Added block tags geode_invalid_blocks and lava_pool_stone_replaceables.
1.17-pre11.17

Changed feature tree. Added field sapling_provider, a block state provider which is used to determine if the tree location is valid.
1.17-pre11.17

Changed feature geode. Added field invalid_blocks which is a block tag.
1.17-pre11.17

Changed structure feature nether_fossil. Added field height which is a height provider.
1.17-pre11.17

Changed the weight field in template_pool. It is now limited between 1 and 150 (inclusive).
21w20a1.17

Added NBT tag for all entities HasVisualFire, which will cause any entity with this flag to visually appear on fire, even if they are not actually on fire.
21w20a1.17

Barrier blocks and light blocks are now shown in a structure region if "Show invisible blocks" is enabled.
21w20a1.17

Added block tag features_cannot_replace containing bedrock, spawner, chest, and end_portal_frame.
21w20a1.17

Changed feature geode. Added field cannot_replace, taking a block tag.
21w20a1.17

Added processor type protected_blocks. It has a field value, taking a block tag.
21w20a1.17

Changed feature netherrack_replace_blobs. The radius field is now limited between 0 and 12 (inclusive)
21w19a1.17

Updated to Java 16.
21w19a1.17

Changed the syntax of the /item command. The new syntax:

    /item replace <target> with <item stack> [<count>] same as the old replaceitem command.
    /item replace <target> from <source> [<modifier>] copies an item from the source to the target and optionally modifies the item.
    /item modify <target> <modifier> modifies the item without copying.

21w19a1.17

Added block tags mineable/axe, mineable/hoe, mineable/pickaxe, and mineable/shovel. Blocks in these tags can be destroyed more quickly with the maching tool.
21w19a1.17

Added block tags needs_stone_tool, needs_iron_tool, and needs_diamond_tool. If a block requires the correct tool to drop, these tags determine which tier of that tool is required.
21w17a1.17

Added block tag small_dripleaf_placeable, containing clay and moss_block.
21w17a1.17

Added noise settings field noodle_caves_enabled.
21w16a1.17

Renamed statistic minecraft.custom:minecraft.play_one_minute → minecraft.custom:minecraft.play_time.
21w16a1.17

Added statistic minecraft.custom:minecraft.total_world_time which is similar to play_time, except that it also includes time in the pause screen.
21w16a1.17

Added blocks to the dirt block tag: grass_block, mycelium, and moss_block.
21w16a1.17

Renamed block tag lush_plants_replaceable → moss_replaceable.
21w16a1.17

Added carver fields in the debug_settings object: water_state, lava_state, and barrier_state.
21w16a1.17

Added carver field aquifers_enabled.
21w16a1.17

Removed feature emerald_ore and replaced it with replace_single_block, which has a field targets that works the same as the ore configuration.
21w16a1.17

Added noise settings field ore_veins_enabled.
21w15a1.17

It is announced the Caves & Cliffs update will be split, and with that a bunch of changes have been reverted, such as the new height limit and noise cave. The tech is still available in the game, just disabled.
21w15a1.17

Added server property resource-pack-prompt. Expects a text component shown as custom message when require-resource-pack is used.
21w15a1.17

Added the /debug function subcommand. Executes a function while logging every command, message, result, or error to a file. Can only be run from chat.
21w15a1.17

Added marker entity, which only exists on the server and are not ticked. They can have arbitrary data in its data NBT tag.
21w15a1.17

Selector and nbt text components can now specify the separator by using the separator field. It is ", " by default.
21w15a1.17

Re-added carvers underwater_canyon and underwater_cave.
21w15a1.17

Changed feature geode to make better use of int providers where separate min_ and max_ fields were used.
21w15a1.17

Added int provider clamped which takes another int provider given by value.source, and clamps it between value.min_inclusive and value.max_inclusive.
21w15a1.17

Added int provider biased_to_bottom which takes two int fields value.min_inclusive and value.max_inclusive.
21w15a1.17

Changed decorator count. Negative counts are no longer allowed.
21w15a1.17

Added height provider trapezoid which takes fields value.min_inclusive, value.max_inclusive, and plateau.
21w15a1.17

Added height provider very_biased_to_bottom, which is configured the same as biased_to_bottom using fields value.min_inclusive, value.max_inclusive, and value.inner.
21w15a1.17

Changed decorator range to use a height provider in field height.
21w15a1.17

Removed decorators depth_average, range_biased_to_bottom, and range_very_biased_to_bottom, since they can now use a normal range decorator with the new height providers. Removed decorator glowstone since it can be replaced with a count decorator.
21w14a1.17

Added noise settings field min_surface_level. It controls where the surface generation starts.
21w13a1.17

Placing a structure block with /setblock now defaults to the LOAD mode.
21w13a1.17

Added entity goat. It has a tag IsScreamingGoat.
21w13a1.17

Added light block. It acts as an air block, but emits lights. It has two block states waterlogged and level, which is a number between 0 and 15.
21w13a1.17

Added block tags dirt and snow.
21w13a1.17

Removed entity type tag axolotl_tempted_hostiles.
21w13a1.17

Added entity type tags axolotl_hunt_targets, freeze_hurts_extra_types, and freeze_immune_entity_types.
21w13a1.17

Added particle light.
21w13a1.17

Dead code is no longer stripped away.
21w13a1.17

Added mob spawn category underground_water_creature.
21w13a1.17

Changed uniform float provider. It now has fields min_inclusive and max_exclusive.
21w13a1.17

Added int providers, they replace uniform ints in features. They are configured very similarly to float providers. There are currently 2 types constant and uniform.
21w13a1.17

Added height providers. There are currently 3 types constant, uniform, and biased_to_bottom.
21w13a1.17

Moved canyon carver fields horizontal_radius_factor, vertical_radius_factor, vertical_center_factor, distance_factor, thickness, and width_smoothness into sub-object shape.
21w13a1.17

Replaced carver field bottom_inclusive and top_inclusive with field y, which is a height provider. Added field yScale.
21w13a1.17

Made cave carvers configurable. Added fields horizontal_radius_multiplier, vertical_radius_multiplier, floor_level, and lava_level.
21w11a1.17

Added F3+L shortcut to generate a performance report in .minecraft/debug/profiling/.
21w11a1.17

Spectators can now see through lava and powder snow.
21w11a1.17

Area effect cloud NBT tag Radius is now limited to 32.
21w11a1.17

Added particles electric_spark, scrape, wax_on, and wax_off.
21w11a1.17

Added item tag cluster_max_harvestables, containing all of the pickaxes.
21w11a1.17

Renamed canyon carver field distanceFactor → distance_factor.
21w11a1.17

Renamed decorator heightmap_with_water_threshold → water_depth_threshold.
21w10a1.17

Rendering now uses the OpenGL 3.2 core profile. All fixed function rendering has been replaced with shader based rendering. All shaders except blit can be replaced in resource packs. Added folders in resource packs shaders/core and shaders/include.
21w10a1.17

Spyglass item model is now split between the inventory model and the handheld model.
21w10a1.17

The number of items that the /give command can give has been limited to 100 stacks.
21w10a1.17

Slime NBT tag Size is now limited to 126.
21w10a1.17

Removed block tag azalea_log_replaceable and added block tag lush_ground_replaceable.
21w10a1.17

Added block and item tags coal_ores, emerald_ores, and copper_ores.
21w10a1.17

Added decorator cave_surface which finds a surface. It has a field surface which must be one of floor or ceiling, and an int field floor_to_ceiling_search_range.
21w10a1.17

Changed decorators heightmap. Now has a config field heightmap to specify which heightmap to use.
21w10a1.17

Removed decorators top_solid_heightmap and heightmap_world_surface, since they can be replaced with a configured heightmap decorator now.
21w10a1.17

Added decorator heightmap_with_water_threshold. It has a single field max_water_depth.
21w10a1.17

Made feature fossil configurable. Added fields max_empty_corners_allowed, fossil_structures, overlay_structures, fossil_processors, and overlay_processors.
21w10a1.17

Changed feature tree. Removed fields max_water_depth and heightmap, those can be replaced with the corresponding decorators. Added fields dirt_provider and force_dirt. Removed field leaves_provider → foliage_provider.
21w10a1.17

Added trunk placer bending_trunk_placer. In addition to the default fields, it also has bend_length and min_height_for_leaves.
21w10a1.17

Added foliage provider random_spread_foliage_provider. In addition to the default fields, it also has foliage_height and leaf_placement_attempts.
21w10a1.17

Added block state provider randomized_int_state_provider. It wraps another state provider in source and sets the block state property to the value produced by the uniform int in values.
21w10a1.17

Added feature growing_plant, which places a column of blocks in the direction specified by the field direction. It has fields body_provider, head_provider, allow_water, and height_distribution.
21w10a1.17

Added features vegetation_patch and waterlogged_vegetation_patch.
21w10a1.17

Added feature root_system.
21w10a1.17

Changed feature simple_block. The to_place field is now a block state provider rather than a block state.
21w08a1.17

Recipes and advancements referencing ore blocks now use block tags, to support the deepslate ore variants.
21w08a1.17

Added block tags stone_ore_replaceable and deepslate_ore_replaceable.
21w08a1.17

Added item tags diamond_ores, iron_ores, lapis_ores, and redstone_ores.
21w08a1.17

Renamed grimstone to deepslate. Renamed noise settings field grimstone_enabled → deepslate_enabled.
21w08a1.17

Added float providers. There are currently 4 types:

    constant returns the number from value. This is also the type when specifying the number
    uniform return a number starting with value.base and adds a random number between 0 and value.spread 1.
    clamped_normal starts with a normal random number using value.mean and value.deviation, then clamps it between value.min and value.max.
    trapezoid returns a random number between value.min and value.max, with a bias towards the center defined by value.plateau.

21w08a1.17

Changed features dripstone_cluster and large_dripstone to use float providers instead of uniform floats.
21w08a1.17

Added optional carver field debug_settings. When enabled with debug_mode, can place blocks from air_state.
21w08a1.17

Added configuration for the canyon carver. Added fields bottom_inclusive, top_inclusive, y_scale, distanceFactor, vertical_rotation, thickness, width_smoothness, horizontal_radius_factor, vertical_radius_default_factor, and vertical_radius_center_factor.
21w08a1.17

Changed feature ore. Added field discard_chance_on_air_exposure which is a number between 0 and 1. Replaced target and state with an array targets. Each element is an object with fields target which is a rule test and state which is a block_state.
21w08a1.17

Removed feature no_surface_ore, since it can now be replaced with an ore feature with discard_chance_on_air_exposure.
21w08a1.17

Added feature scattered_ore. It has the same configuration as the ore feature.
21w08a1.17

Changed feature geode. Added field invalid_blocks_threshold. With a low threshold, the geode will not generate if there are air blocks in the center.
21w07a1.17

Add noise settings field grimstone_enabled. It is a required boolean.
21w07a1.17

Added vertical anchors.
21w07a1.17

Changed range decorator to use vertical anchors. Now has two fields bottom_inclusive and top_inclusive which both take a vertical anchor.
21w07a1.17

Renamed decorators range_biased → range_biased_to_bottom and range_very_biased → range_very_biased_to_bottom. Both decorators have also changed so they have fields bottom_inclusive and top_inclusive that take a vertical anchor, as well as a number field cutoff.
21w07a1.17

Changed depth_average decorator. The baseline field is now a vertical anchor.
21w07a1.17

Changed decorators dark_oak_tree, end_gateway and removed decorators water_lake, emerald_ore, fire, lava_lake. Some parts of the decoration have been split into existing decorators.
21w07a1.17

Changed feature glowstone_blob. Some parts of the decoration have been split into existing decorators.
21w07a1.17

Removed probability field from decorator carving_mask. Instead combine it with a chance or count_extra decorator.
21w06a1.17

Overworld height limit has been expanded by 64 block up and 64 blocks down.
21w06a1.17

Added noise settings fields aquifers_enabled and noise_caves_enabled. They are both required booleans.
21w06a1.17

Removed carvers underwater_canyon and underwater_cave.
21w06a1.17

Added feature underwater_magma with fields floor_search_range, placement_radius_around_floor, and placement_probability_per_valid_position.
21w05a1.17

Copper oxidisation is now affected by the randomTickSpeed game rule
21w05a1.17

All projectile entities now have a tag HasBeenShot. If false or 0b, will fire a projectile_shot game event the next tick.
21w05a1.17

Removed game events armor_stand_add_item and flint_and_steel_use. Renamed game events eating_finished → eat and entity_hit → entity_damaged.
21w05a1.17

Added game events block_change, drinking_finish, entity_killed, entity_place, equip, minecart_moving, mob_interact, prime_fuse, ravager_roar, ring_bell, shear, shulker_close, and shulker_open.
21w05a1.17

Renamed game event tag ignore_vibrations_stepping_carefully → ignore_vibrations_sneaking.
21w05a1.17

Added particles falling_spore_blossom and spore_blossom_air.
21w05a1.17

Added block tags azalea_log_replaceable, cave_vines, and lush_plants_replaceable.
21w05a1.17

Added item tag fox_food.
21w05a1.17

Changed toasts.png texture to include an icon for the bundle tutorial.
21w05a1.17

Changed feature dripstone_cluster. Renamed field max_distance_from_center_affecting_chance_of_dripstone_column → max_distance_from_edge_affecting_chance_of_dripstone_column.
21w03a1.17

Added entity glow_squid. It has a tag DarkTicksRemaining, which makes the squid not emissive and ticks down.
21w03a1.17

Added entity glow_item_frame.
21w03a1.17

Added lit block state to signs.
21w03a1.17

Added particles glow and glow_squid_ink.
21w03a1.17

Added feature glow_lichen.
21w03a1.17

Changed the license included in the obfuscation map.
20w51a1.17

Added playersSleepingPercentage game rule, which defaults to 100. It controls what percentage of players must sleep to skip the night. A value of 0 means 1 player is always enough, values above 100 will prevent skipping the night.
20w51a1.17

Removed the game event eating_start.
20w51a1.17

Added item tags axolotl_tempt_items and occludes_vibration_signals.
20w51a1.17

Added entity type tags axolotl_always_hostiles and axolotl_tempted_hostiles.
20w51a1.17

Added texture for the bundle GUI gui/container/bundle.png.
20w49a1.17

A new game event system has been implemented to support Sculk Sensors detecting vibrations. The initial game events are step, swim, flap, elytra_free_fall, hit_ground, splash, projectile_shoot, projectile_land, entity_hit, block_place, block_destroy, fluid_place, fluid_pickup, block_open, block_close, block_switch, block_unswitch, block_attach, block_detach, block_press, block_unpress, container_open, container_close, explode, armor_stand_add_item, wolf_shaking, dispense_fail, fishing_rod_cast, fishing_rod_reel_in, piston_extend, piston_contract, flint_and_steel_use, eating_start, eating_finish, and lightning_strike.
20w49a1.17

Added game event tags. There are currently two game event tags from vanilla:

    vibrations determines which game events are detected by the Sculk Sensor. Currently contains all game events.
    ignore_vibrations_stepping_carefully determines which game events should be ignored by the Sculk Sensor when the event source is sneaking. Currently contain step, hit_ground, and projectile_shoot.

20w49a1.17

Add block tags dripstone_replaceable_blocks, occludes_vibration_signals.
20w49a1.17

Removed max-build-height server property.
20w49a1.17

Added particles vibration and dust_color_transition.
20w49a1.17

Changed dimension type. Added min_y and height fields which determine the build limit in the dimension.
20w49a1.17

Changed noise settings. Added noise.min_y field (height already existed), these determine the range where terrain will generate in the dimension.
20w49a1.17

Added features dripstone_cluster, large_dripstone and small_dripstone
20w48a1.17

Added freezeDamage game rule. Toggles whether powder snow causes freezing damage or not.
20w48a1.17

Added particles dripping_dripstone_lava, falling_dripstone_lava, dripping_dripstone_water, and falling_dripstone_water.
20w48a1.17

Renamed block tag snow_step_sounds → inside_snow_step_sounds.
20w48a1.17

Added item tag freeze_immune_wearables.
20w46a1.17

Data pack format has been increased to 7.
20w46a1.17

Removed the /replaceitem command.
20w46a1.17

Added the /item command to replace the /replaceitem command. It has three forms:

    /item <target> replace <item stack> [<count>] same as the old replaceitem command.
    /item <target> modify <modifier> modifies the item without copying.
    /item <target> copy <source> [<modifier>] copies an item from the source to the target and optionally modifies the item.

There are currently two possible source and targets:

    entity <selector> <slot>
    block <x> <y> <z> <slot>

20w46a1.17

Added item modifiers, stored in the item_modifiers directory. They are the function part of loot tables, and can also be an array of functions where each function will be applied.
20w46a1.17

Added predicate value_check to check if a value provider value is inside a min/max range range.
20w46a1.17

Added function set_enchantments. It has two fields:

    enchantments map of enchantment ID to level value, which can be a value provider. To remove an enchantment, set the level to 0.
    add optional boolean. If true, change will be relative to current enchantment level.

20w46a1.17

Changed set_count function, it now has an optional add field. If true, the change with be relative to the current item count.
20w46a1.17

Changed set_damage function, it now has an optional add field. If true, the change with be relative to the current damage.
20w46a1.17

Changed set_nbt function, the source parameter can now reference storage using {"type": "storage", "storage": <namespaced id>}.
20w46a1.17

Added value providers. They can be used in the same places as random number generators (for example rolls and set_count). The existing types constant, uniform, and binomial can still be used.
20w46a1.17

Added value provider score with the following fields:

    score scoreboard objective.
    target score holder provider.
    scale optional number to scale the score.

20w46a1.17

Added score holder providers, used in the score value provider. Current has two types:

    context which takes a field target, one of this, killer, direct_killer, or killer_player.
    fixed which takes a field name, either a fake player or UUID.

20w46a1.17

Added particle snowflake.
20w46a1.17

Added block tag snow_step_sound_blocks.
20w46a1.17

Added entity type tag powder_snow_walkable_mobs.
20w45a1.17

Data pack and resource pack formats can now be different.
20w45a1.17

Slots for the gamemode selector are now 26 pixels wide instead of 25.
20w45a1.17

Resource pack format has been increased to 7.
20w45a1.17

Added server property require-resource-pack to enforce custom resource packs. If set, players who decline will be disconnected.
20w45a1.17

Entities are now saved separately from chunks in the entities directory, similar to the POI storage.
20w45a1.17

Added function set_banner_pattern. It has two fields:

    patterns array of objects, each having pattern (for example square_bottom_left), and color (for example light_gray).
    append optional boolean. If true, new elements will be appended to existing ones.

20w45a1.17

Renamed grass_path → dirt_path.
20w45a1.17

Split cauldron into cauldron, water_cauldron, and lava_cauldron. Only empty cauldrons (previously cauldron[level=0]) are now cauldron.
20w45a1.17

Rails can now be waterlogged. Water no longer breaks rails.
20w45a1.17

Added texture misc/spyglass_scope.png.
20w45a1.17

Added particle small_flame, used by candles.
20w45a1.17

Added block tags candle_cakes, candles, cauldrons, and crystal_sound_blocks.
20w45a1.17

Added item tags candles, ignored_by_piglin_babies, and piglin_food.
20w45a1.17

Added feature geode.
1.16.2-rc11.16.2

Data and resource pack format has been increased to 6.
1.16.2-pre21.16.2

The /execute in command now respects dimension scaling.
1.16.2-pre11.16.2

Custom world generation and dimension settings now use the same folder pattern in data packs as other resources. data/minecraft/<type>/<namespace>/<path>.json → data/<namespace>/<type>/<path>.json.
20w30a1.16.2

Tags can now have optional entries. Instead of a string, they are defined as { "id": "foo", "required": false }.
20w29a1.16.2

Changed /spawnpoint and /setworldspawn commands to include an optional angle parameter:

    /spawnpoint [targets] [pos] [angle]
    /setworldspawn [pos] [angle]

20w29a1.16.2

Added noise settings, which are stored in the worldgen/noise_settings folder.
20w28a1.16.2

Added server property rate-limit. The default of 0 means no limit.
20w28a1.16.2

Added biomes, which are stored in the worldgen/biome folder. Custom biomes can be used in custom dimension generators, and in the single biome world types after adding the data pack.
20w28a1.16.2

Added configured carvers, which are stored in the worldgen/configured_carver folder.
20w28a1.16.2

Added configured features, which are stored in the worldgen/configured_feature folder.
20w28a1.16.2

Added configured structure features, which are stored in the worldgen/configured_structure_feature folder.
20w28a1.16.2

Added configured surface builders, which are stored in the worldgen/configured_surface_builder folder.
20w28a1.16.2

Added processor lists, which are stored in the worldgen/processor_list folder.
20w28a1.16.2

Added template pools, which are stored in the worldgen/template_pool folder.
1.16-pre61.16

Added trigger player_interacted_with_entity. It has conditions item (the item from the player's hand) and entity (which was interacted with).
1.16-pre51.16

Added a GPU warn list for graphics drivers that are known to have rendering issues with Fabulous graphics.
1.16-pre31.16

Region files are now only opened in synchronous mode on Windows, not on other operating systems.
1.16-pre31.16

Added syncChunkWrites client option in options.txt, which does the same as the sync-chunk-writes server property.
1.16-pre11.16

Added smithing recipe type, it has fields base, addition and result.
1.16-pre11.16

The game will now detect critical data pack issues, like missing required tags and prevent the world from being loaded.
1.16-pre11.16

Data packs can now be selected before the world is created. Packs can now be dropped on data and resource pack selection screens, folders will be copied.
1.16-pre11.16

Added dimension and dimension_type folders to data packs.
20w22a1.16

The top level element in a predicate file can now be an array. All sub predicates need to match for the predicate to match.
20w22a1.16

Improved data pack loading.

    Failed reloads will not be applied.
    If existing data packs fail, will give the option to load in safe mode, which only loads the vanilla data pack.
    Changed to the data pack list are stored only after a successful reload.
    Added a --safeMode option to start the server only with the vanilla data pack.

20w21a1.16

Added under argument to the /spreadplayers command, to specify the maximum height.
20w21a1.16

Added initial support for custom world settings and custom dimensions. This is an experimental feature, worlds will be marked as experimental.
20w21a1.16

World settings can be exported on the edit world screen, and can be imported during world creation.
20w20a1.16

Shulkers with NoAI can now be summoned with rotation.
20w20a1.16

Added trigger thrown_item_picked_up_by_entity. It has conditions item and entity (which picked up the item).
20w20a1.16

Added trigger player_generates_container_loot. It has one required condition loot_table (loot table resource location).
20w20a1.16

Added trigger item_used_on_block. It has conditions location (block position) and item (item that was used, if any).
20w20a1.16

Removed safely_harvest_honey trigger.
20w20a1.16

Added smokey field to location predicates. It's a boolean that checks if the location is closely above a campfire.
20w20a1.16

Added vehicle and targeted_entity fields to entity predicates, both entity predicates.
20w18a1.16

Added server property enable-status. If false, will suppress replies to status requests. This makes the server appear offline.
20w18a1.16

Added server property entity-broadcast-range-percentage. This controls at what range the server sends data about entities to clients.
20w18a1.16

Added player condition to every trigger (except impossible).
20w18a1.16

Entity conditions in triggers can now use loot table condition syntax by using a list. All conditions in the list must be met.
20w18a1.16

Existing contents of location, slept_in_bed, hero_of_the_village, and voluntary_exile triggers can now be placed in the location field. The old syntax is now deprecated.
20w17a1.16

Added the /attribute command, with syntax:

    attribute <target> <attribute> get [scale]: get the total value of attribute
    attribute <target> <attribute> base set <value>: sets the base valye
    attribute <target> <attribute> base get [scale]: get the base value
    attribute <target> <attribute> modifier add <uuid> <name> <value> add|multiply|multiply_base: adds a modifier
    attribute <target> <attribute> modifier remove <uuid>: removes a modifier
    attribute <target> <attribute> modifier value get <uuid> [scale]: get the value of modifier

20w17a1.16

Added font property to text components. It defaults to minecraft:default.
20w17a1.16

The text component color property can now contain RGB values prefixed by #.
20w17a1.16

The text component hoverEvent parameter now has a contents parameter, depending on the type. The value parameter is now deprecated.

    for show_text: a text component
    for show_item: either an item ID or object with fields id, count, and tag (serialized NBT)
    for show_entity: object with fields id (UUID), name (text component), and type (entity type)

20w17a1.16

The BlockStates field in Sections no longer contains values stretching over multiple 64-bit fields. If the number of bits per block is not a power of two, some bits will not be used.
20w16a1.16

Increased the maximum structure size that structure blocks can save from 32x32x32 to 48x48x48.
20w16a1.16

Added a button in the GUI of jigsaws to generate a jigsaw structure.
20w16a1.16

Added new server property enable-jmx-monitoring. If true, will allow external tools to monitor the server tick times through JMX.
20w15a1.16

Tab completion for resource locations will now match any part after a _.
20w14a1.16

The compass now has LodestonePos, LodestoneDimensions and LoadstoneTracked NBT fields.
20w14a1.16

Attributes are now a registry. Unknown attributes are no longer allowed, and attributes have been renamed:

    generic.armorToughness → generic.armor_toughness
    generic.attackDamage → generic.attack_damage
    generic.attackKnockback → generic.attack_knockback
    generic.attackSpeed → generic.attack_speed
    generic.flyingSpeed → generic.flying_speed
    generic.followRange → generic.follow_range
    generic.knockbackResistance → generic.knockback_resistance
    generic.maxHealth → generic.max_health
    generic.movementSpeed → generic.movement_speed
    horse.jumpStrength → horse.jump_strength
    zombie.spawnReinforcements → zombie.spawn_reinforcements

20w14a1.16

Region files are now opened in synchronous mode to prevent data loss and corruption after a crash.
20w14a1.16

Added server property sync-chunk-writes. If false, region files are no longer opened in synchronous mode.
20w13a1.16

Added block states to the jigsaw block. It now has 12 orientations (up|down)_(north|east|south|west) and (north|east|south|west)_up.
20w13a1.16

Added jigsaw NBT field joint which can be either rollable or aligned. Renamed field target_pool to pool. Split attachement_type into name (on parent block) and target (on child block).
20w12a1.16

Changed how UUIDs are stored in all places. They are now represented as an array of 4 integers. Renamed some fields:

    OwnerUUID → Owner
    TrustedUUIDs → Trusted (foxes)
    target_uuid → Target (conduits)

20w12a1.16

Added fishing_hook parameter in entity predicates, which checks properties of the fishing hook. It's an object with one parameter: in_open_water (boolean).
20w11a1.16

Added block tag soul_speed_blocks to determine on which blocks the soul speed enchantment increases speed.
20w11a1.16

Added particle type soul.
20w10a1.16

UUIDs of owners of projectiles are now stored as an array of 4 integers.
20w10a1.16

Added NBT fields Invisible and Fixed to item frames
20w10a1.16

Added new trigger target_hit. It has 3 conditions:

    signal_strength: an integer matching the signal strength output
    projectile: an entity predicate
    shooter: an entity predicate

20w09a1.16

Added particle types dripping_obsidian_tear, falling_obsidian_tear, and landing_obsidian_tear.
20w09a1.16

Added nbt field IsImmuneToZombification to piglins that prevents them from zombifying in the overworld.
20w06a1.16

Added the /locatebiome command, with syntax: /locatebiome <biome>.
20w06a1.16

Added particle types ash, crimson_spore, soul_fire_flame, and warped_spore.
</changelog>